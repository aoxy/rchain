// Code generated by protoc-gen-go. DO NOT EDIT.
// source: DeployServiceV1.proto

package casper_v1

import (
	context "context"
	_ "dawn1806/rchain/api/pb/scalapb"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventInfoResponse struct {
	// Types that are valid to be assigned to Message:
	//	*EventInfoResponse_Error
	//	*EventInfoResponse_Result
	Message              isEventInfoResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *EventInfoResponse) Reset()         { *m = EventInfoResponse{} }
func (m *EventInfoResponse) String() string { return proto.CompactTextString(m) }
func (*EventInfoResponse) ProtoMessage()    {}
func (*EventInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{0}
}

func (m *EventInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventInfoResponse.Unmarshal(m, b)
}
func (m *EventInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventInfoResponse.Marshal(b, m, deterministic)
}
func (m *EventInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventInfoResponse.Merge(m, src)
}
func (m *EventInfoResponse) XXX_Size() int {
	return xxx_messageInfo_EventInfoResponse.Size(m)
}
func (m *EventInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventInfoResponse proto.InternalMessageInfo

type isEventInfoResponse_Message interface {
	isEventInfoResponse_Message()
}

type EventInfoResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type EventInfoResponse_Result struct {
	Result *BlockEventInfo `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*EventInfoResponse_Error) isEventInfoResponse_Message() {}

func (*EventInfoResponse_Result) isEventInfoResponse_Message() {}

func (m *EventInfoResponse) GetMessage() isEventInfoResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *EventInfoResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*EventInfoResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *EventInfoResponse) GetResult() *BlockEventInfo {
	if x, ok := m.GetMessage().(*EventInfoResponse_Result); ok {
		return x.Result
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EventInfoResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EventInfoResponse_Error)(nil),
		(*EventInfoResponse_Result)(nil),
	}
}

type ExploratoryDeployResponse struct {
	// Types that are valid to be assigned to Message:
	//	*ExploratoryDeployResponse_Error
	//	*ExploratoryDeployResponse_Result
	Message              isExploratoryDeployResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ExploratoryDeployResponse) Reset()         { *m = ExploratoryDeployResponse{} }
func (m *ExploratoryDeployResponse) String() string { return proto.CompactTextString(m) }
func (*ExploratoryDeployResponse) ProtoMessage()    {}
func (*ExploratoryDeployResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{1}
}

func (m *ExploratoryDeployResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExploratoryDeployResponse.Unmarshal(m, b)
}
func (m *ExploratoryDeployResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExploratoryDeployResponse.Marshal(b, m, deterministic)
}
func (m *ExploratoryDeployResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExploratoryDeployResponse.Merge(m, src)
}
func (m *ExploratoryDeployResponse) XXX_Size() int {
	return xxx_messageInfo_ExploratoryDeployResponse.Size(m)
}
func (m *ExploratoryDeployResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExploratoryDeployResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExploratoryDeployResponse proto.InternalMessageInfo

type isExploratoryDeployResponse_Message interface {
	isExploratoryDeployResponse_Message()
}

type ExploratoryDeployResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ExploratoryDeployResponse_Result struct {
	Result *DataWithBlockInfo `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*ExploratoryDeployResponse_Error) isExploratoryDeployResponse_Message() {}

func (*ExploratoryDeployResponse_Result) isExploratoryDeployResponse_Message() {}

func (m *ExploratoryDeployResponse) GetMessage() isExploratoryDeployResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ExploratoryDeployResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*ExploratoryDeployResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *ExploratoryDeployResponse) GetResult() *DataWithBlockInfo {
	if x, ok := m.GetMessage().(*ExploratoryDeployResponse_Result); ok {
		return x.Result
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExploratoryDeployResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExploratoryDeployResponse_Error)(nil),
		(*ExploratoryDeployResponse_Result)(nil),
	}
}

// doDeploy
type DeployResponse struct {
	// Types that are valid to be assigned to Message:
	//	*DeployResponse_Error
	//	*DeployResponse_Result
	Message              isDeployResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DeployResponse) Reset()         { *m = DeployResponse{} }
func (m *DeployResponse) String() string { return proto.CompactTextString(m) }
func (*DeployResponse) ProtoMessage()    {}
func (*DeployResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{2}
}

func (m *DeployResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployResponse.Unmarshal(m, b)
}
func (m *DeployResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployResponse.Marshal(b, m, deterministic)
}
func (m *DeployResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployResponse.Merge(m, src)
}
func (m *DeployResponse) XXX_Size() int {
	return xxx_messageInfo_DeployResponse.Size(m)
}
func (m *DeployResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeployResponse proto.InternalMessageInfo

type isDeployResponse_Message interface {
	isDeployResponse_Message()
}

type DeployResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type DeployResponse_Result struct {
	Result string `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*DeployResponse_Error) isDeployResponse_Message() {}

func (*DeployResponse_Result) isDeployResponse_Message() {}

func (m *DeployResponse) GetMessage() isDeployResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *DeployResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*DeployResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *DeployResponse) GetResult() string {
	if x, ok := m.GetMessage().(*DeployResponse_Result); ok {
		return x.Result
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DeployResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DeployResponse_Error)(nil),
		(*DeployResponse_Result)(nil),
	}
}

// getBlock
type BlockResponse struct {
	// Types that are valid to be assigned to Message:
	//	*BlockResponse_Error
	//	*BlockResponse_BlockInfo
	Message              isBlockResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *BlockResponse) Reset()         { *m = BlockResponse{} }
func (m *BlockResponse) String() string { return proto.CompactTextString(m) }
func (*BlockResponse) ProtoMessage()    {}
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{3}
}

func (m *BlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockResponse.Unmarshal(m, b)
}
func (m *BlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockResponse.Marshal(b, m, deterministic)
}
func (m *BlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockResponse.Merge(m, src)
}
func (m *BlockResponse) XXX_Size() int {
	return xxx_messageInfo_BlockResponse.Size(m)
}
func (m *BlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockResponse proto.InternalMessageInfo

type isBlockResponse_Message interface {
	isBlockResponse_Message()
}

type BlockResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type BlockResponse_BlockInfo struct {
	BlockInfo *BlockInfo `protobuf:"bytes,2,opt,name=blockInfo,proto3,oneof"`
}

func (*BlockResponse_Error) isBlockResponse_Message() {}

func (*BlockResponse_BlockInfo) isBlockResponse_Message() {}

func (m *BlockResponse) GetMessage() isBlockResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *BlockResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*BlockResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *BlockResponse) GetBlockInfo() *BlockInfo {
	if x, ok := m.GetMessage().(*BlockResponse_BlockInfo); ok {
		return x.BlockInfo
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BlockResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BlockResponse_Error)(nil),
		(*BlockResponse_BlockInfo)(nil),
	}
}

// visualizeDag
type VisualizeBlocksResponse struct {
	// Types that are valid to be assigned to Message:
	//	*VisualizeBlocksResponse_Error
	//	*VisualizeBlocksResponse_Content
	Message              isVisualizeBlocksResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *VisualizeBlocksResponse) Reset()         { *m = VisualizeBlocksResponse{} }
func (m *VisualizeBlocksResponse) String() string { return proto.CompactTextString(m) }
func (*VisualizeBlocksResponse) ProtoMessage()    {}
func (*VisualizeBlocksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{4}
}

func (m *VisualizeBlocksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VisualizeBlocksResponse.Unmarshal(m, b)
}
func (m *VisualizeBlocksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VisualizeBlocksResponse.Marshal(b, m, deterministic)
}
func (m *VisualizeBlocksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VisualizeBlocksResponse.Merge(m, src)
}
func (m *VisualizeBlocksResponse) XXX_Size() int {
	return xxx_messageInfo_VisualizeBlocksResponse.Size(m)
}
func (m *VisualizeBlocksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VisualizeBlocksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VisualizeBlocksResponse proto.InternalMessageInfo

type isVisualizeBlocksResponse_Message interface {
	isVisualizeBlocksResponse_Message()
}

type VisualizeBlocksResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type VisualizeBlocksResponse_Content struct {
	Content string `protobuf:"bytes,2,opt,name=content,proto3,oneof"`
}

func (*VisualizeBlocksResponse_Error) isVisualizeBlocksResponse_Message() {}

func (*VisualizeBlocksResponse_Content) isVisualizeBlocksResponse_Message() {}

func (m *VisualizeBlocksResponse) GetMessage() isVisualizeBlocksResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *VisualizeBlocksResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*VisualizeBlocksResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *VisualizeBlocksResponse) GetContent() string {
	if x, ok := m.GetMessage().(*VisualizeBlocksResponse_Content); ok {
		return x.Content
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*VisualizeBlocksResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*VisualizeBlocksResponse_Error)(nil),
		(*VisualizeBlocksResponse_Content)(nil),
	}
}

// machineVerifiableDag
type MachineVerifyResponse struct {
	// Types that are valid to be assigned to Message:
	//	*MachineVerifyResponse_Error
	//	*MachineVerifyResponse_Content
	Message              isMachineVerifyResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *MachineVerifyResponse) Reset()         { *m = MachineVerifyResponse{} }
func (m *MachineVerifyResponse) String() string { return proto.CompactTextString(m) }
func (*MachineVerifyResponse) ProtoMessage()    {}
func (*MachineVerifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{5}
}

func (m *MachineVerifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MachineVerifyResponse.Unmarshal(m, b)
}
func (m *MachineVerifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MachineVerifyResponse.Marshal(b, m, deterministic)
}
func (m *MachineVerifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineVerifyResponse.Merge(m, src)
}
func (m *MachineVerifyResponse) XXX_Size() int {
	return xxx_messageInfo_MachineVerifyResponse.Size(m)
}
func (m *MachineVerifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineVerifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MachineVerifyResponse proto.InternalMessageInfo

type isMachineVerifyResponse_Message interface {
	isMachineVerifyResponse_Message()
}

type MachineVerifyResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type MachineVerifyResponse_Content struct {
	Content string `protobuf:"bytes,2,opt,name=content,proto3,oneof"`
}

func (*MachineVerifyResponse_Error) isMachineVerifyResponse_Message() {}

func (*MachineVerifyResponse_Content) isMachineVerifyResponse_Message() {}

func (m *MachineVerifyResponse) GetMessage() isMachineVerifyResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *MachineVerifyResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*MachineVerifyResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *MachineVerifyResponse) GetContent() string {
	if x, ok := m.GetMessage().(*MachineVerifyResponse_Content); ok {
		return x.Content
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MachineVerifyResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MachineVerifyResponse_Error)(nil),
		(*MachineVerifyResponse_Content)(nil),
	}
}

// showMainChain & getBlocks
type BlockInfoResponse struct {
	// Types that are valid to be assigned to Message:
	//	*BlockInfoResponse_Error
	//	*BlockInfoResponse_BlockInfo
	Message              isBlockInfoResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *BlockInfoResponse) Reset()         { *m = BlockInfoResponse{} }
func (m *BlockInfoResponse) String() string { return proto.CompactTextString(m) }
func (*BlockInfoResponse) ProtoMessage()    {}
func (*BlockInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{6}
}

func (m *BlockInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockInfoResponse.Unmarshal(m, b)
}
func (m *BlockInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockInfoResponse.Marshal(b, m, deterministic)
}
func (m *BlockInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockInfoResponse.Merge(m, src)
}
func (m *BlockInfoResponse) XXX_Size() int {
	return xxx_messageInfo_BlockInfoResponse.Size(m)
}
func (m *BlockInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockInfoResponse proto.InternalMessageInfo

type isBlockInfoResponse_Message interface {
	isBlockInfoResponse_Message()
}

type BlockInfoResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type BlockInfoResponse_BlockInfo struct {
	BlockInfo *LightBlockInfo `protobuf:"bytes,2,opt,name=blockInfo,proto3,oneof"`
}

func (*BlockInfoResponse_Error) isBlockInfoResponse_Message() {}

func (*BlockInfoResponse_BlockInfo) isBlockInfoResponse_Message() {}

func (m *BlockInfoResponse) GetMessage() isBlockInfoResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *BlockInfoResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*BlockInfoResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *BlockInfoResponse) GetBlockInfo() *LightBlockInfo {
	if x, ok := m.GetMessage().(*BlockInfoResponse_BlockInfo); ok {
		return x.BlockInfo
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BlockInfoResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BlockInfoResponse_Error)(nil),
		(*BlockInfoResponse_BlockInfo)(nil),
	}
}

// listenForDataAtName
type ListeningNameDataResponse struct {
	// Types that are valid to be assigned to Message:
	//	*ListeningNameDataResponse_Error
	//	*ListeningNameDataResponse_Payload
	Message              isListeningNameDataResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *ListeningNameDataResponse) Reset()         { *m = ListeningNameDataResponse{} }
func (m *ListeningNameDataResponse) String() string { return proto.CompactTextString(m) }
func (*ListeningNameDataResponse) ProtoMessage()    {}
func (*ListeningNameDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{7}
}

func (m *ListeningNameDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListeningNameDataResponse.Unmarshal(m, b)
}
func (m *ListeningNameDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListeningNameDataResponse.Marshal(b, m, deterministic)
}
func (m *ListeningNameDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListeningNameDataResponse.Merge(m, src)
}
func (m *ListeningNameDataResponse) XXX_Size() int {
	return xxx_messageInfo_ListeningNameDataResponse.Size(m)
}
func (m *ListeningNameDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListeningNameDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListeningNameDataResponse proto.InternalMessageInfo

type isListeningNameDataResponse_Message interface {
	isListeningNameDataResponse_Message()
}

type ListeningNameDataResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ListeningNameDataResponse_Payload struct {
	Payload *ListeningNameDataPayload `protobuf:"bytes,2,opt,name=payload,proto3,oneof"`
}

func (*ListeningNameDataResponse_Error) isListeningNameDataResponse_Message() {}

func (*ListeningNameDataResponse_Payload) isListeningNameDataResponse_Message() {}

func (m *ListeningNameDataResponse) GetMessage() isListeningNameDataResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ListeningNameDataResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*ListeningNameDataResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *ListeningNameDataResponse) GetPayload() *ListeningNameDataPayload {
	if x, ok := m.GetMessage().(*ListeningNameDataResponse_Payload); ok {
		return x.Payload
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListeningNameDataResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListeningNameDataResponse_Error)(nil),
		(*ListeningNameDataResponse_Payload)(nil),
	}
}

type ListeningNameDataPayload struct {
	BlockInfo            []*DataWithBlockInfo `protobuf:"bytes,1,rep,name=blockInfo,proto3" json:"blockInfo,omitempty"`
	Length               int32                `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListeningNameDataPayload) Reset()         { *m = ListeningNameDataPayload{} }
func (m *ListeningNameDataPayload) String() string { return proto.CompactTextString(m) }
func (*ListeningNameDataPayload) ProtoMessage()    {}
func (*ListeningNameDataPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{8}
}

func (m *ListeningNameDataPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListeningNameDataPayload.Unmarshal(m, b)
}
func (m *ListeningNameDataPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListeningNameDataPayload.Marshal(b, m, deterministic)
}
func (m *ListeningNameDataPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListeningNameDataPayload.Merge(m, src)
}
func (m *ListeningNameDataPayload) XXX_Size() int {
	return xxx_messageInfo_ListeningNameDataPayload.Size(m)
}
func (m *ListeningNameDataPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ListeningNameDataPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ListeningNameDataPayload proto.InternalMessageInfo

func (m *ListeningNameDataPayload) GetBlockInfo() []*DataWithBlockInfo {
	if m != nil {
		return m.BlockInfo
	}
	return nil
}

func (m *ListeningNameDataPayload) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

// listenForContinuationAtName
type ContinuationAtNameResponse struct {
	// Types that are valid to be assigned to Message:
	//	*ContinuationAtNameResponse_Error
	//	*ContinuationAtNameResponse_Payload
	Message              isContinuationAtNameResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ContinuationAtNameResponse) Reset()         { *m = ContinuationAtNameResponse{} }
func (m *ContinuationAtNameResponse) String() string { return proto.CompactTextString(m) }
func (*ContinuationAtNameResponse) ProtoMessage()    {}
func (*ContinuationAtNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{9}
}

func (m *ContinuationAtNameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContinuationAtNameResponse.Unmarshal(m, b)
}
func (m *ContinuationAtNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContinuationAtNameResponse.Marshal(b, m, deterministic)
}
func (m *ContinuationAtNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContinuationAtNameResponse.Merge(m, src)
}
func (m *ContinuationAtNameResponse) XXX_Size() int {
	return xxx_messageInfo_ContinuationAtNameResponse.Size(m)
}
func (m *ContinuationAtNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContinuationAtNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContinuationAtNameResponse proto.InternalMessageInfo

type isContinuationAtNameResponse_Message interface {
	isContinuationAtNameResponse_Message()
}

type ContinuationAtNameResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ContinuationAtNameResponse_Payload struct {
	Payload *ContinuationAtNamePayload `protobuf:"bytes,2,opt,name=payload,proto3,oneof"`
}

func (*ContinuationAtNameResponse_Error) isContinuationAtNameResponse_Message() {}

func (*ContinuationAtNameResponse_Payload) isContinuationAtNameResponse_Message() {}

func (m *ContinuationAtNameResponse) GetMessage() isContinuationAtNameResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ContinuationAtNameResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*ContinuationAtNameResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *ContinuationAtNameResponse) GetPayload() *ContinuationAtNamePayload {
	if x, ok := m.GetMessage().(*ContinuationAtNameResponse_Payload); ok {
		return x.Payload
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ContinuationAtNameResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ContinuationAtNameResponse_Error)(nil),
		(*ContinuationAtNameResponse_Payload)(nil),
	}
}

type ContinuationAtNamePayload struct {
	BlockResults         []*ContinuationsWithBlockInfo `protobuf:"bytes,1,rep,name=blockResults,proto3" json:"blockResults,omitempty"`
	Length               int32                         `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ContinuationAtNamePayload) Reset()         { *m = ContinuationAtNamePayload{} }
func (m *ContinuationAtNamePayload) String() string { return proto.CompactTextString(m) }
func (*ContinuationAtNamePayload) ProtoMessage()    {}
func (*ContinuationAtNamePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{10}
}

func (m *ContinuationAtNamePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContinuationAtNamePayload.Unmarshal(m, b)
}
func (m *ContinuationAtNamePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContinuationAtNamePayload.Marshal(b, m, deterministic)
}
func (m *ContinuationAtNamePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContinuationAtNamePayload.Merge(m, src)
}
func (m *ContinuationAtNamePayload) XXX_Size() int {
	return xxx_messageInfo_ContinuationAtNamePayload.Size(m)
}
func (m *ContinuationAtNamePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ContinuationAtNamePayload.DiscardUnknown(m)
}

var xxx_messageInfo_ContinuationAtNamePayload proto.InternalMessageInfo

func (m *ContinuationAtNamePayload) GetBlockResults() []*ContinuationsWithBlockInfo {
	if m != nil {
		return m.BlockResults
	}
	return nil
}

func (m *ContinuationAtNamePayload) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

// findDeploy
type FindDeployResponse struct {
	// Types that are valid to be assigned to Message:
	//	*FindDeployResponse_Error
	//	*FindDeployResponse_BlockInfo
	Message              isFindDeployResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *FindDeployResponse) Reset()         { *m = FindDeployResponse{} }
func (m *FindDeployResponse) String() string { return proto.CompactTextString(m) }
func (*FindDeployResponse) ProtoMessage()    {}
func (*FindDeployResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{11}
}

func (m *FindDeployResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindDeployResponse.Unmarshal(m, b)
}
func (m *FindDeployResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindDeployResponse.Marshal(b, m, deterministic)
}
func (m *FindDeployResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindDeployResponse.Merge(m, src)
}
func (m *FindDeployResponse) XXX_Size() int {
	return xxx_messageInfo_FindDeployResponse.Size(m)
}
func (m *FindDeployResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindDeployResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindDeployResponse proto.InternalMessageInfo

type isFindDeployResponse_Message interface {
	isFindDeployResponse_Message()
}

type FindDeployResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type FindDeployResponse_BlockInfo struct {
	BlockInfo *LightBlockInfo `protobuf:"bytes,2,opt,name=blockInfo,proto3,oneof"`
}

func (*FindDeployResponse_Error) isFindDeployResponse_Message() {}

func (*FindDeployResponse_BlockInfo) isFindDeployResponse_Message() {}

func (m *FindDeployResponse) GetMessage() isFindDeployResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *FindDeployResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*FindDeployResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *FindDeployResponse) GetBlockInfo() *LightBlockInfo {
	if x, ok := m.GetMessage().(*FindDeployResponse_BlockInfo); ok {
		return x.BlockInfo
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FindDeployResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FindDeployResponse_Error)(nil),
		(*FindDeployResponse_BlockInfo)(nil),
	}
}

// previewPrivateNames
type PrivateNamePreviewResponse struct {
	// Types that are valid to be assigned to Message:
	//	*PrivateNamePreviewResponse_Error
	//	*PrivateNamePreviewResponse_Payload
	Message              isPrivateNamePreviewResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *PrivateNamePreviewResponse) Reset()         { *m = PrivateNamePreviewResponse{} }
func (m *PrivateNamePreviewResponse) String() string { return proto.CompactTextString(m) }
func (*PrivateNamePreviewResponse) ProtoMessage()    {}
func (*PrivateNamePreviewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{12}
}

func (m *PrivateNamePreviewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateNamePreviewResponse.Unmarshal(m, b)
}
func (m *PrivateNamePreviewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateNamePreviewResponse.Marshal(b, m, deterministic)
}
func (m *PrivateNamePreviewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateNamePreviewResponse.Merge(m, src)
}
func (m *PrivateNamePreviewResponse) XXX_Size() int {
	return xxx_messageInfo_PrivateNamePreviewResponse.Size(m)
}
func (m *PrivateNamePreviewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateNamePreviewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateNamePreviewResponse proto.InternalMessageInfo

type isPrivateNamePreviewResponse_Message interface {
	isPrivateNamePreviewResponse_Message()
}

type PrivateNamePreviewResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type PrivateNamePreviewResponse_Payload struct {
	Payload *PrivateNamePreviewPayload `protobuf:"bytes,2,opt,name=payload,proto3,oneof"`
}

func (*PrivateNamePreviewResponse_Error) isPrivateNamePreviewResponse_Message() {}

func (*PrivateNamePreviewResponse_Payload) isPrivateNamePreviewResponse_Message() {}

func (m *PrivateNamePreviewResponse) GetMessage() isPrivateNamePreviewResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *PrivateNamePreviewResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*PrivateNamePreviewResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *PrivateNamePreviewResponse) GetPayload() *PrivateNamePreviewPayload {
	if x, ok := m.GetMessage().(*PrivateNamePreviewResponse_Payload); ok {
		return x.Payload
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PrivateNamePreviewResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PrivateNamePreviewResponse_Error)(nil),
		(*PrivateNamePreviewResponse_Payload)(nil),
	}
}

type PrivateNamePreviewPayload struct {
	Ids                  [][]byte `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateNamePreviewPayload) Reset()         { *m = PrivateNamePreviewPayload{} }
func (m *PrivateNamePreviewPayload) String() string { return proto.CompactTextString(m) }
func (*PrivateNamePreviewPayload) ProtoMessage()    {}
func (*PrivateNamePreviewPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{13}
}

func (m *PrivateNamePreviewPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateNamePreviewPayload.Unmarshal(m, b)
}
func (m *PrivateNamePreviewPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateNamePreviewPayload.Marshal(b, m, deterministic)
}
func (m *PrivateNamePreviewPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateNamePreviewPayload.Merge(m, src)
}
func (m *PrivateNamePreviewPayload) XXX_Size() int {
	return xxx_messageInfo_PrivateNamePreviewPayload.Size(m)
}
func (m *PrivateNamePreviewPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateNamePreviewPayload.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateNamePreviewPayload proto.InternalMessageInfo

func (m *PrivateNamePreviewPayload) GetIds() [][]byte {
	if m != nil {
		return m.Ids
	}
	return nil
}

// lastFinalizedBlock
type LastFinalizedBlockResponse struct {
	// Types that are valid to be assigned to Message:
	//	*LastFinalizedBlockResponse_Error
	//	*LastFinalizedBlockResponse_BlockInfo
	Message              isLastFinalizedBlockResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *LastFinalizedBlockResponse) Reset()         { *m = LastFinalizedBlockResponse{} }
func (m *LastFinalizedBlockResponse) String() string { return proto.CompactTextString(m) }
func (*LastFinalizedBlockResponse) ProtoMessage()    {}
func (*LastFinalizedBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{14}
}

func (m *LastFinalizedBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastFinalizedBlockResponse.Unmarshal(m, b)
}
func (m *LastFinalizedBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastFinalizedBlockResponse.Marshal(b, m, deterministic)
}
func (m *LastFinalizedBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastFinalizedBlockResponse.Merge(m, src)
}
func (m *LastFinalizedBlockResponse) XXX_Size() int {
	return xxx_messageInfo_LastFinalizedBlockResponse.Size(m)
}
func (m *LastFinalizedBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LastFinalizedBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LastFinalizedBlockResponse proto.InternalMessageInfo

type isLastFinalizedBlockResponse_Message interface {
	isLastFinalizedBlockResponse_Message()
}

type LastFinalizedBlockResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type LastFinalizedBlockResponse_BlockInfo struct {
	BlockInfo *BlockInfo `protobuf:"bytes,2,opt,name=blockInfo,proto3,oneof"`
}

func (*LastFinalizedBlockResponse_Error) isLastFinalizedBlockResponse_Message() {}

func (*LastFinalizedBlockResponse_BlockInfo) isLastFinalizedBlockResponse_Message() {}

func (m *LastFinalizedBlockResponse) GetMessage() isLastFinalizedBlockResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *LastFinalizedBlockResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*LastFinalizedBlockResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *LastFinalizedBlockResponse) GetBlockInfo() *BlockInfo {
	if x, ok := m.GetMessage().(*LastFinalizedBlockResponse_BlockInfo); ok {
		return x.BlockInfo
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*LastFinalizedBlockResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*LastFinalizedBlockResponse_Error)(nil),
		(*LastFinalizedBlockResponse_BlockInfo)(nil),
	}
}

// isFinalized
type IsFinalizedResponse struct {
	// Types that are valid to be assigned to Message:
	//	*IsFinalizedResponse_Error
	//	*IsFinalizedResponse_IsFinalized
	Message              isIsFinalizedResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *IsFinalizedResponse) Reset()         { *m = IsFinalizedResponse{} }
func (m *IsFinalizedResponse) String() string { return proto.CompactTextString(m) }
func (*IsFinalizedResponse) ProtoMessage()    {}
func (*IsFinalizedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{15}
}

func (m *IsFinalizedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsFinalizedResponse.Unmarshal(m, b)
}
func (m *IsFinalizedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsFinalizedResponse.Marshal(b, m, deterministic)
}
func (m *IsFinalizedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsFinalizedResponse.Merge(m, src)
}
func (m *IsFinalizedResponse) XXX_Size() int {
	return xxx_messageInfo_IsFinalizedResponse.Size(m)
}
func (m *IsFinalizedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsFinalizedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsFinalizedResponse proto.InternalMessageInfo

type isIsFinalizedResponse_Message interface {
	isIsFinalizedResponse_Message()
}

type IsFinalizedResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type IsFinalizedResponse_IsFinalized struct {
	IsFinalized bool `protobuf:"varint,2,opt,name=isFinalized,proto3,oneof"`
}

func (*IsFinalizedResponse_Error) isIsFinalizedResponse_Message() {}

func (*IsFinalizedResponse_IsFinalized) isIsFinalizedResponse_Message() {}

func (m *IsFinalizedResponse) GetMessage() isIsFinalizedResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *IsFinalizedResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*IsFinalizedResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *IsFinalizedResponse) GetIsFinalized() bool {
	if x, ok := m.GetMessage().(*IsFinalizedResponse_IsFinalized); ok {
		return x.IsFinalized
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*IsFinalizedResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*IsFinalizedResponse_Error)(nil),
		(*IsFinalizedResponse_IsFinalized)(nil),
	}
}

type BondStatusResponse struct {
	// Types that are valid to be assigned to Message:
	//	*BondStatusResponse_Error
	//	*BondStatusResponse_IsBonded
	Message              isBondStatusResponse_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *BondStatusResponse) Reset()         { *m = BondStatusResponse{} }
func (m *BondStatusResponse) String() string { return proto.CompactTextString(m) }
func (*BondStatusResponse) ProtoMessage()    {}
func (*BondStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af61704012aff389, []int{16}
}

func (m *BondStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BondStatusResponse.Unmarshal(m, b)
}
func (m *BondStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BondStatusResponse.Marshal(b, m, deterministic)
}
func (m *BondStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BondStatusResponse.Merge(m, src)
}
func (m *BondStatusResponse) XXX_Size() int {
	return xxx_messageInfo_BondStatusResponse.Size(m)
}
func (m *BondStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BondStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BondStatusResponse proto.InternalMessageInfo

type isBondStatusResponse_Message interface {
	isBondStatusResponse_Message()
}

type BondStatusResponse_Error struct {
	Error *ServiceError `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type BondStatusResponse_IsBonded struct {
	IsBonded bool `protobuf:"varint,2,opt,name=isBonded,proto3,oneof"`
}

func (*BondStatusResponse_Error) isBondStatusResponse_Message() {}

func (*BondStatusResponse_IsBonded) isBondStatusResponse_Message() {}

func (m *BondStatusResponse) GetMessage() isBondStatusResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *BondStatusResponse) GetError() *ServiceError {
	if x, ok := m.GetMessage().(*BondStatusResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (m *BondStatusResponse) GetIsBonded() bool {
	if x, ok := m.GetMessage().(*BondStatusResponse_IsBonded); ok {
		return x.IsBonded
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BondStatusResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BondStatusResponse_Error)(nil),
		(*BondStatusResponse_IsBonded)(nil),
	}
}

func init() {
	proto.RegisterType((*EventInfoResponse)(nil), "casper.v1.EventInfoResponse")
	proto.RegisterType((*ExploratoryDeployResponse)(nil), "casper.v1.ExploratoryDeployResponse")
	proto.RegisterType((*DeployResponse)(nil), "casper.v1.DeployResponse")
	proto.RegisterType((*BlockResponse)(nil), "casper.v1.BlockResponse")
	proto.RegisterType((*VisualizeBlocksResponse)(nil), "casper.v1.VisualizeBlocksResponse")
	proto.RegisterType((*MachineVerifyResponse)(nil), "casper.v1.MachineVerifyResponse")
	proto.RegisterType((*BlockInfoResponse)(nil), "casper.v1.BlockInfoResponse")
	proto.RegisterType((*ListeningNameDataResponse)(nil), "casper.v1.ListeningNameDataResponse")
	proto.RegisterType((*ListeningNameDataPayload)(nil), "casper.v1.ListeningNameDataPayload")
	proto.RegisterType((*ContinuationAtNameResponse)(nil), "casper.v1.ContinuationAtNameResponse")
	proto.RegisterType((*ContinuationAtNamePayload)(nil), "casper.v1.ContinuationAtNamePayload")
	proto.RegisterType((*FindDeployResponse)(nil), "casper.v1.FindDeployResponse")
	proto.RegisterType((*PrivateNamePreviewResponse)(nil), "casper.v1.PrivateNamePreviewResponse")
	proto.RegisterType((*PrivateNamePreviewPayload)(nil), "casper.v1.PrivateNamePreviewPayload")
	proto.RegisterType((*LastFinalizedBlockResponse)(nil), "casper.v1.LastFinalizedBlockResponse")
	proto.RegisterType((*IsFinalizedResponse)(nil), "casper.v1.IsFinalizedResponse")
	proto.RegisterType((*BondStatusResponse)(nil), "casper.v1.BondStatusResponse")
}

func init() { proto.RegisterFile("DeployServiceV1.proto", fileDescriptor_af61704012aff389) }

var fileDescriptor_af61704012aff389 = []byte{
	// 957 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0x5d, 0x6f, 0xdb, 0x36,
	0x14, 0x95, 0x56, 0x34, 0x1f, 0xb7, 0x49, 0xd1, 0xd0, 0x4b, 0x6b, 0xbb, 0xdd, 0x16, 0x70, 0x0d,
	0xd0, 0x97, 0x6a, 0x49, 0x0b, 0x6c, 0xc0, 0x5e, 0xda, 0x39, 0x89, 0xe1, 0x00, 0xc9, 0xd0, 0x3a,
	0x80, 0xf7, 0xb0, 0x61, 0x03, 0x2d, 0x33, 0x32, 0x11, 0x99, 0x14, 0x44, 0xda, 0x99, 0x37, 0x6c,
	0xc0, 0xf6, 0x03, 0x86, 0xbd, 0xee, 0xef, 0xed, 0x97, 0x0c, 0x22, 0xf5, 0x41, 0x45, 0x96, 0x37,
	0x07, 0x1d, 0xfa, 0x64, 0x8b, 0xe4, 0x3d, 0xe7, 0xdc, 0x4b, 0xf2, 0x5c, 0x09, 0x76, 0x8f, 0x69,
	0x14, 0x8a, 0xf9, 0x05, 0x8d, 0x67, 0xcc, 0xa7, 0x83, 0x43, 0x2f, 0x8a, 0x85, 0x12, 0x68, 0xd3,
	0x27, 0x32, 0xa2, 0xb1, 0x37, 0x3b, 0x6c, 0x37, 0x8e, 0xf4, 0xdf, 0x73, 0x2a, 0x25, 0x09, 0xa8,
	0x99, 0x6f, 0xa3, 0x34, 0xe0, 0x24, 0x8e, 0x45, 0x9c, 0x8e, 0xb5, 0x4a, 0x50, 0x47, 0x62, 0x32,
	0x11, 0x3c, 0x9d, 0xda, 0x95, 0x3e, 0x09, 0x49, 0x34, 0xfc, 0x2c, 0xfd, 0x35, 0xc3, 0xf8, 0x1a,
	0x76, 0x4e, 0x66, 0x94, 0xab, 0x53, 0x7e, 0x29, 0xfa, 0x54, 0x46, 0x82, 0x4b, 0x8a, 0xf6, 0xe1,
	0x2e, 0x4d, 0x50, 0x9b, 0xee, 0x9e, 0xfb, 0xec, 0xde, 0x8b, 0x6d, 0xcf, 0xa6, 0xea, 0x39, 0x7d,
	0x33, 0x8b, 0x0e, 0x60, 0x2d, 0xa6, 0x72, 0x1a, 0xaa, 0xe6, 0x07, 0x7a, 0xdd, 0x43, 0x2f, 0x95,
	0xdc, 0x09, 0x85, 0x7f, 0x95, 0xc3, 0xf6, 0x9c, 0x7e, 0xba, 0xae, 0xb3, 0x09, 0xeb, 0x13, 0x93,
	0x04, 0xfe, 0xdd, 0x85, 0xd6, 0xc9, 0x8f, 0x51, 0x28, 0x62, 0xa2, 0x44, 0x3c, 0x37, 0xc2, 0x57,
	0x55, 0xf0, 0xf2, 0x86, 0x82, 0x56, 0xa6, 0xe0, 0x98, 0x28, 0xf2, 0x0d, 0x53, 0x63, 0xad, 0xa4,
	0x5e, 0xc4, 0x77, 0x70, 0xff, 0x76, 0xc4, 0xcd, 0x12, 0xf1, 0xe6, 0x62, 0x74, 0x05, 0xdb, 0x9a,
	0x7f, 0x55, 0xf0, 0x43, 0xd8, 0x1c, 0x66, 0xba, 0xd3, 0xc4, 0x76, 0x4a, 0xa5, 0x4d, 0x13, 0x2a,
	0x56, 0xd9, 0xac, 0x01, 0x3c, 0x1a, 0x30, 0x39, 0x25, 0x21, 0xfb, 0x89, 0xea, 0xd5, 0x72, 0x55,
	0xfe, 0x36, 0xac, 0xfb, 0x82, 0x2b, 0xca, 0x8b, 0xec, 0xb2, 0x01, 0x9b, 0x88, 0xc2, 0xee, 0x39,
	0xf1, 0xc7, 0x8c, 0xd3, 0x01, 0x8d, 0xd9, 0xe5, 0xfc, 0x7f, 0xa2, 0xf9, 0x05, 0x76, 0xf2, 0xa4,
	0x57, 0xa5, 0xf8, 0xbc, 0x5a, 0xc9, 0xfc, 0x90, 0x9e, 0xb1, 0x60, 0xac, 0xfe, 0xbd, 0x9c, 0x7f,
	0xb8, 0xd0, 0x3a, 0x63, 0x52, 0x51, 0xce, 0x78, 0xf0, 0x35, 0x99, 0xd0, 0xe4, 0x68, 0xad, 0xaa,
	0xe3, 0x15, 0xac, 0x47, 0x64, 0x1e, 0x0a, 0x32, 0x4a, 0x55, 0x7c, 0xea, 0xe5, 0xb7, 0xdb, 0xab,
	0xa0, 0xbf, 0x31, 0x4b, 0x93, 0x7a, 0xa4, 0x51, 0xb6, 0xa0, 0x2b, 0x68, 0xd6, 0x45, 0xa0, 0x2f,
	0xec, 0x7c, 0xdd, 0xbd, 0x3b, 0x4b, 0xaf, 0x84, 0x95, 0x30, 0x7a, 0x08, 0x6b, 0x21, 0xe5, 0x81,
	0x1a, 0x6b, 0x7d, 0x77, 0xfb, 0xe9, 0x13, 0xfe, 0xd3, 0x85, 0xf6, 0x91, 0xe0, 0x8a, 0xf1, 0x29,
	0x51, 0x4c, 0xf0, 0xaf, 0x54, 0x42, 0xb9, 0x6a, 0xfa, 0xaf, 0x6f, 0xa6, 0xff, 0xd4, 0x4a, 0xbf,
	0x0a, 0xbf, 0x3c, 0xff, 0x9f, 0xa1, 0x55, 0x1b, 0x82, 0xba, 0xb0, 0x35, 0x4c, 0xaf, 0xdc, 0x34,
	0x54, 0x32, 0xad, 0x01, 0xce, 0xe8, 0xec, 0x40, 0x59, 0x2e, 0x46, 0x29, 0xae, 0xb6, 0x1e, 0xbf,
	0x02, 0xea, 0x32, 0x3e, 0xba, 0x9d, 0x69, 0xbc, 0x83, 0xd3, 0x98, 0xec, 0xc7, 0x9b, 0x98, 0xcd,
	0x88, 0xa2, 0x3a, 0xed, 0x98, 0xce, 0x18, 0xbd, 0x7e, 0xa7, 0xfb, 0x51, 0x85, 0x5f, 0xbe, 0x1f,
	0xcf, 0xa1, 0x55, 0x1b, 0x82, 0x1e, 0xc0, 0x1d, 0x36, 0x32, 0xdb, 0xb0, 0xd5, 0x4f, 0xfe, 0xe2,
	0xdf, 0x5c, 0x68, 0x9f, 0x11, 0xa9, 0xba, 0x8c, 0x6b, 0x8b, 0x1a, 0xbd, 0x07, 0x8b, 0xbc, 0x82,
	0xc6, 0xa9, 0xcc, 0x05, 0xac, 0xca, 0x8d, 0xe1, 0x1e, 0x2b, 0xa2, 0x35, 0xfb, 0x46, 0xcf, 0xe9,
	0xdb, 0x83, 0x36, 0xd9, 0x08, 0x50, 0x47, 0xf0, 0xd1, 0x85, 0x22, 0x6a, 0xba, 0xb2, 0x15, 0x3f,
	0x81, 0x0d, 0x26, 0x93, 0x70, 0x8b, 0x28, 0x1f, 0xb1, 0x58, 0x5e, 0xfc, 0x05, 0xb0, 0x5d, 0x6a,
	0xfe, 0xe8, 0x35, 0x6c, 0x8c, 0x84, 0x19, 0x42, 0x8f, 0x72, 0x13, 0xd0, 0xcf, 0xda, 0x32, 0xcc,
	0x0b, 0x83, 0xb5, 0xf1, 0xe5, 0x43, 0x8d, 0x1d, 0xf4, 0x25, 0x6c, 0x04, 0xd4, 0x1c, 0x4a, 0x84,
	0x4a, 0xd5, 0x7d, 0x3b, 0xa5, 0xf1, 0xbc, 0xdd, 0xb4, 0x82, 0x4b, 0xbb, 0x88, 0x1d, 0xf4, 0x16,
	0xb6, 0x66, 0x59, 0x17, 0x3a, 0x26, 0x01, 0xca, 0x89, 0x06, 0xd6, 0xa8, 0x81, 0xc1, 0x16, 0x4c,
	0x4d, 0xe7, 0xc2, 0xce, 0x81, 0x8b, 0x06, 0xf0, 0xe1, 0xc4, 0xea, 0x37, 0x8c, 0x0c, 0x43, 0x0d,
	0xdd, 0xce, 0xe2, 0x4b, 0xdd, 0xc8, 0x60, 0xef, 0x59, 0xd8, 0x0b, 0x9b, 0x15, 0x76, 0x50, 0x17,
	0xb6, 0xe5, 0x58, 0x5c, 0x9f, 0x13, 0xc6, 0x8f, 0xc6, 0x84, 0x71, 0xd4, 0x28, 0xe5, 0x2a, 0x0d,
	0xd2, 0x93, 0x9b, 0xc9, 0xda, 0xfd, 0x48, 0xeb, 0xeb, 0xc0, 0x66, 0x56, 0x2e, 0x79, 0x5b, 0x8c,
	0x01, 0x34, 0x42, 0x6d, 0xee, 0x5d, 0x11, 0x27, 0xbb, 0x64, 0xdc, 0xcd, 0xda, 0xbf, 0x7c, 0xcc,
	0x20, 0x3e, 0x5d, 0xd6, 0x47, 0xac, 0x1c, 0x03, 0x78, 0x9c, 0xe3, 0x56, 0xdd, 0x13, 0x7d, 0xb2,
	0xc8, 0x20, 0x6d, 0x9e, 0xfd, 0xa5, 0x86, 0x5d, 0x2a, 0x26, 0x5c, 0xe6, 0x06, 0x59, 0xe8, 0x2e,
	0x4c, 0xd3, 0xe0, 0x7d, 0x64, 0xe1, 0x55, 0x0d, 0x15, 0x3b, 0xe8, 0x07, 0x68, 0x44, 0xa9, 0x95,
	0x14, 0xe6, 0x22, 0x0b, 0xa1, 0x55, 0xcb, 0xa9, 0x0a, 0xad, 0x37, 0x4a, 0xec, 0xa0, 0xef, 0x01,
	0x85, 0x15, 0x1b, 0x2a, 0xf0, 0xab, 0x16, 0x55, 0xc5, 0xaf, 0xb7, 0x31, 0xec, 0xa0, 0xd3, 0x92,
	0x4b, 0xa0, 0xfc, 0xae, 0x58, 0xc6, 0x63, 0x10, 0x3f, 0xb6, 0x10, 0x17, 0xb8, 0x92, 0xa9, 0xe9,
	0x30, 0x77, 0x90, 0xa2, 0xa6, 0x85, 0xab, 0x54, 0x6b, 0x5a, 0x75, 0x1c, 0xec, 0xa0, 0x6f, 0x61,
	0x87, 0xde, 0x7c, 0xe3, 0x46, 0x39, 0x7d, 0xe5, 0x65, 0xbc, 0x7a, 0xc2, 0x6a, 0xdf, 0xd7, 0xb1,
	0x83, 0x2e, 0x00, 0xe5, 0xa7, 0xbf, 0x33, 0xef, 0xd1, 0xa4, 0x9f, 0x49, 0xf4, 0x78, 0xc1, 0x35,
	0xc8, 0x66, 0xff, 0xc3, 0x75, 0x38, 0x86, 0xfb, 0x01, 0x55, 0xfa, 0x4b, 0xa2, 0x33, 0xef, 0x11,
	0x39, 0x5e, 0xe8, 0x43, 0x36, 0x4e, 0xe5, 0x63, 0x06, 0x3b, 0x9d, 0x83, 0xbf, 0x5f, 0x3d, 0x87,
	0x7d, 0x5f, 0x88, 0xc8, 0x8b, 0xfd, 0xe4, 0x86, 0x67, 0xeb, 0xf5, 0x27, 0x90, 0x2f, 0x42, 0x6f,
	0xa4, 0xb3, 0xf1, 0x66, 0x87, 0x0f, 0xdc, 0x67, 0x6e, 0xcf, 0x19, 0xae, 0xe9, 0x99, 0x97, 0xff,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x7c, 0xb9, 0xff, 0x9b, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeployServiceClient is the client API for DeployService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeployServiceClient interface {
	// Queue deployment of Rholang code (or fail to parse).
	DoDeploy(ctx context.Context, in *DeployDataProto, opts ...grpc.CallOption) (*DeployResponse, error)
	// Get details about a particular block.
	GetBlock(ctx context.Context, in *BlockQuery, opts ...grpc.CallOption) (*BlockResponse, error)
	// Get dag
	VisualizeDag(ctx context.Context, in *VisualizeDagQuery, opts ...grpc.CallOption) (DeployService_VisualizeDagClient, error)
	MachineVerifiableDag(ctx context.Context, in *MachineVerifyQuery, opts ...grpc.CallOption) (*MachineVerifyResponse, error)
	// Returns on success LightBlockInfo
	ShowMainChain(ctx context.Context, in *BlocksQuery, opts ...grpc.CallOption) (DeployService_ShowMainChainClient, error)
	// Get a summary of blocks on the blockchain.
	GetBlocks(ctx context.Context, in *BlocksQuery, opts ...grpc.CallOption) (DeployService_GetBlocksClient, error)
	// Find data sent to a name.
	ListenForDataAtName(ctx context.Context, in *DataAtNameQuery, opts ...grpc.CallOption) (*ListeningNameDataResponse, error)
	// Find processes receiving on a name.
	ListenForContinuationAtName(ctx context.Context, in *ContinuationAtNameQuery, opts ...grpc.CallOption) (*ContinuationAtNameResponse, error)
	// Find block containing a deploy.
	FindDeploy(ctx context.Context, in *FindDeployQuery, opts ...grpc.CallOption) (*FindDeployResponse, error)
	// Preview new top-level unforgeable names (for example, to compute signatures over them).
	PreviewPrivateNames(ctx context.Context, in *PrivateNamePreviewQuery, opts ...grpc.CallOption) (*PrivateNamePreviewResponse, error)
	// Get details about a particular block.
	LastFinalizedBlock(ctx context.Context, in *LastFinalizedBlockQuery, opts ...grpc.CallOption) (*LastFinalizedBlockResponse, error)
	// Check if a given block is finalized.
	IsFinalized(ctx context.Context, in *IsFinalizedQuery, opts ...grpc.CallOption) (*IsFinalizedResponse, error)
	// Check if a given validator is bonded.
	// Returns on success BondStatusResponse
	BondStatus(ctx context.Context, in *BondStatusQuery, opts ...grpc.CallOption) (*BondStatusResponse, error)
	// Executes deploy as user deploy with immediate rollback and return result
	ExploratoryDeploy(ctx context.Context, in *ExploratoryDeployQuery, opts ...grpc.CallOption) (*ExploratoryDeployResponse, error)
	// get blocks by block height
	GetBlocksByHeights(ctx context.Context, in *BlocksQueryByHeight, opts ...grpc.CallOption) (DeployService_GetBlocksByHeightsClient, error)
	// temporary api for testing
	GetEventByHash(ctx context.Context, in *BlockQuery, opts ...grpc.CallOption) (*EventInfoResponse, error)
}

type deployServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeployServiceClient(cc grpc.ClientConnInterface) DeployServiceClient {
	return &deployServiceClient{cc}
}

func (c *deployServiceClient) DoDeploy(ctx context.Context, in *DeployDataProto, opts ...grpc.CallOption) (*DeployResponse, error) {
	out := new(DeployResponse)
	err := c.cc.Invoke(ctx, "/casper.v1.DeployService/doDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deployServiceClient) GetBlock(ctx context.Context, in *BlockQuery, opts ...grpc.CallOption) (*BlockResponse, error) {
	out := new(BlockResponse)
	err := c.cc.Invoke(ctx, "/casper.v1.DeployService/getBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deployServiceClient) VisualizeDag(ctx context.Context, in *VisualizeDagQuery, opts ...grpc.CallOption) (DeployService_VisualizeDagClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeployService_serviceDesc.Streams[0], "/casper.v1.DeployService/visualizeDag", opts...)
	if err != nil {
		return nil, err
	}
	x := &deployServiceVisualizeDagClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeployService_VisualizeDagClient interface {
	Recv() (*VisualizeBlocksResponse, error)
	grpc.ClientStream
}

type deployServiceVisualizeDagClient struct {
	grpc.ClientStream
}

func (x *deployServiceVisualizeDagClient) Recv() (*VisualizeBlocksResponse, error) {
	m := new(VisualizeBlocksResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deployServiceClient) MachineVerifiableDag(ctx context.Context, in *MachineVerifyQuery, opts ...grpc.CallOption) (*MachineVerifyResponse, error) {
	out := new(MachineVerifyResponse)
	err := c.cc.Invoke(ctx, "/casper.v1.DeployService/machineVerifiableDag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deployServiceClient) ShowMainChain(ctx context.Context, in *BlocksQuery, opts ...grpc.CallOption) (DeployService_ShowMainChainClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeployService_serviceDesc.Streams[1], "/casper.v1.DeployService/showMainChain", opts...)
	if err != nil {
		return nil, err
	}
	x := &deployServiceShowMainChainClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeployService_ShowMainChainClient interface {
	Recv() (*BlockInfoResponse, error)
	grpc.ClientStream
}

type deployServiceShowMainChainClient struct {
	grpc.ClientStream
}

func (x *deployServiceShowMainChainClient) Recv() (*BlockInfoResponse, error) {
	m := new(BlockInfoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deployServiceClient) GetBlocks(ctx context.Context, in *BlocksQuery, opts ...grpc.CallOption) (DeployService_GetBlocksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeployService_serviceDesc.Streams[2], "/casper.v1.DeployService/getBlocks", opts...)
	if err != nil {
		return nil, err
	}
	x := &deployServiceGetBlocksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeployService_GetBlocksClient interface {
	Recv() (*BlockInfoResponse, error)
	grpc.ClientStream
}

type deployServiceGetBlocksClient struct {
	grpc.ClientStream
}

func (x *deployServiceGetBlocksClient) Recv() (*BlockInfoResponse, error) {
	m := new(BlockInfoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deployServiceClient) ListenForDataAtName(ctx context.Context, in *DataAtNameQuery, opts ...grpc.CallOption) (*ListeningNameDataResponse, error) {
	out := new(ListeningNameDataResponse)
	err := c.cc.Invoke(ctx, "/casper.v1.DeployService/listenForDataAtName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deployServiceClient) ListenForContinuationAtName(ctx context.Context, in *ContinuationAtNameQuery, opts ...grpc.CallOption) (*ContinuationAtNameResponse, error) {
	out := new(ContinuationAtNameResponse)
	err := c.cc.Invoke(ctx, "/casper.v1.DeployService/listenForContinuationAtName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deployServiceClient) FindDeploy(ctx context.Context, in *FindDeployQuery, opts ...grpc.CallOption) (*FindDeployResponse, error) {
	out := new(FindDeployResponse)
	err := c.cc.Invoke(ctx, "/casper.v1.DeployService/findDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deployServiceClient) PreviewPrivateNames(ctx context.Context, in *PrivateNamePreviewQuery, opts ...grpc.CallOption) (*PrivateNamePreviewResponse, error) {
	out := new(PrivateNamePreviewResponse)
	err := c.cc.Invoke(ctx, "/casper.v1.DeployService/previewPrivateNames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deployServiceClient) LastFinalizedBlock(ctx context.Context, in *LastFinalizedBlockQuery, opts ...grpc.CallOption) (*LastFinalizedBlockResponse, error) {
	out := new(LastFinalizedBlockResponse)
	err := c.cc.Invoke(ctx, "/casper.v1.DeployService/lastFinalizedBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deployServiceClient) IsFinalized(ctx context.Context, in *IsFinalizedQuery, opts ...grpc.CallOption) (*IsFinalizedResponse, error) {
	out := new(IsFinalizedResponse)
	err := c.cc.Invoke(ctx, "/casper.v1.DeployService/isFinalized", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deployServiceClient) BondStatus(ctx context.Context, in *BondStatusQuery, opts ...grpc.CallOption) (*BondStatusResponse, error) {
	out := new(BondStatusResponse)
	err := c.cc.Invoke(ctx, "/casper.v1.DeployService/bondStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deployServiceClient) ExploratoryDeploy(ctx context.Context, in *ExploratoryDeployQuery, opts ...grpc.CallOption) (*ExploratoryDeployResponse, error) {
	out := new(ExploratoryDeployResponse)
	err := c.cc.Invoke(ctx, "/casper.v1.DeployService/exploratoryDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deployServiceClient) GetBlocksByHeights(ctx context.Context, in *BlocksQueryByHeight, opts ...grpc.CallOption) (DeployService_GetBlocksByHeightsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DeployService_serviceDesc.Streams[3], "/casper.v1.DeployService/getBlocksByHeights", opts...)
	if err != nil {
		return nil, err
	}
	x := &deployServiceGetBlocksByHeightsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DeployService_GetBlocksByHeightsClient interface {
	Recv() (*BlockInfoResponse, error)
	grpc.ClientStream
}

type deployServiceGetBlocksByHeightsClient struct {
	grpc.ClientStream
}

func (x *deployServiceGetBlocksByHeightsClient) Recv() (*BlockInfoResponse, error) {
	m := new(BlockInfoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *deployServiceClient) GetEventByHash(ctx context.Context, in *BlockQuery, opts ...grpc.CallOption) (*EventInfoResponse, error) {
	out := new(EventInfoResponse)
	err := c.cc.Invoke(ctx, "/casper.v1.DeployService/getEventByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeployServiceServer is the server API for DeployService service.
type DeployServiceServer interface {
	// Queue deployment of Rholang code (or fail to parse).
	DoDeploy(context.Context, *DeployDataProto) (*DeployResponse, error)
	// Get details about a particular block.
	GetBlock(context.Context, *BlockQuery) (*BlockResponse, error)
	// Get dag
	VisualizeDag(*VisualizeDagQuery, DeployService_VisualizeDagServer) error
	MachineVerifiableDag(context.Context, *MachineVerifyQuery) (*MachineVerifyResponse, error)
	// Returns on success LightBlockInfo
	ShowMainChain(*BlocksQuery, DeployService_ShowMainChainServer) error
	// Get a summary of blocks on the blockchain.
	GetBlocks(*BlocksQuery, DeployService_GetBlocksServer) error
	// Find data sent to a name.
	ListenForDataAtName(context.Context, *DataAtNameQuery) (*ListeningNameDataResponse, error)
	// Find processes receiving on a name.
	ListenForContinuationAtName(context.Context, *ContinuationAtNameQuery) (*ContinuationAtNameResponse, error)
	// Find block containing a deploy.
	FindDeploy(context.Context, *FindDeployQuery) (*FindDeployResponse, error)
	// Preview new top-level unforgeable names (for example, to compute signatures over them).
	PreviewPrivateNames(context.Context, *PrivateNamePreviewQuery) (*PrivateNamePreviewResponse, error)
	// Get details about a particular block.
	LastFinalizedBlock(context.Context, *LastFinalizedBlockQuery) (*LastFinalizedBlockResponse, error)
	// Check if a given block is finalized.
	IsFinalized(context.Context, *IsFinalizedQuery) (*IsFinalizedResponse, error)
	// Check if a given validator is bonded.
	// Returns on success BondStatusResponse
	BondStatus(context.Context, *BondStatusQuery) (*BondStatusResponse, error)
	// Executes deploy as user deploy with immediate rollback and return result
	ExploratoryDeploy(context.Context, *ExploratoryDeployQuery) (*ExploratoryDeployResponse, error)
	// get blocks by block height
	GetBlocksByHeights(*BlocksQueryByHeight, DeployService_GetBlocksByHeightsServer) error
	// temporary api for testing
	GetEventByHash(context.Context, *BlockQuery) (*EventInfoResponse, error)
}

// UnimplementedDeployServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeployServiceServer struct {
}

func (*UnimplementedDeployServiceServer) DoDeploy(ctx context.Context, req *DeployDataProto) (*DeployResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoDeploy not implemented")
}
func (*UnimplementedDeployServiceServer) GetBlock(ctx context.Context, req *BlockQuery) (*BlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlock not implemented")
}
func (*UnimplementedDeployServiceServer) VisualizeDag(req *VisualizeDagQuery, srv DeployService_VisualizeDagServer) error {
	return status.Errorf(codes.Unimplemented, "method VisualizeDag not implemented")
}
func (*UnimplementedDeployServiceServer) MachineVerifiableDag(ctx context.Context, req *MachineVerifyQuery) (*MachineVerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MachineVerifiableDag not implemented")
}
func (*UnimplementedDeployServiceServer) ShowMainChain(req *BlocksQuery, srv DeployService_ShowMainChainServer) error {
	return status.Errorf(codes.Unimplemented, "method ShowMainChain not implemented")
}
func (*UnimplementedDeployServiceServer) GetBlocks(req *BlocksQuery, srv DeployService_GetBlocksServer) error {
	return status.Errorf(codes.Unimplemented, "method GetBlocks not implemented")
}
func (*UnimplementedDeployServiceServer) ListenForDataAtName(ctx context.Context, req *DataAtNameQuery) (*ListeningNameDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListenForDataAtName not implemented")
}
func (*UnimplementedDeployServiceServer) ListenForContinuationAtName(ctx context.Context, req *ContinuationAtNameQuery) (*ContinuationAtNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListenForContinuationAtName not implemented")
}
func (*UnimplementedDeployServiceServer) FindDeploy(ctx context.Context, req *FindDeployQuery) (*FindDeployResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindDeploy not implemented")
}
func (*UnimplementedDeployServiceServer) PreviewPrivateNames(ctx context.Context, req *PrivateNamePreviewQuery) (*PrivateNamePreviewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreviewPrivateNames not implemented")
}
func (*UnimplementedDeployServiceServer) LastFinalizedBlock(ctx context.Context, req *LastFinalizedBlockQuery) (*LastFinalizedBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LastFinalizedBlock not implemented")
}
func (*UnimplementedDeployServiceServer) IsFinalized(ctx context.Context, req *IsFinalizedQuery) (*IsFinalizedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsFinalized not implemented")
}
func (*UnimplementedDeployServiceServer) BondStatus(ctx context.Context, req *BondStatusQuery) (*BondStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BondStatus not implemented")
}
func (*UnimplementedDeployServiceServer) ExploratoryDeploy(ctx context.Context, req *ExploratoryDeployQuery) (*ExploratoryDeployResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExploratoryDeploy not implemented")
}
func (*UnimplementedDeployServiceServer) GetBlocksByHeights(req *BlocksQueryByHeight, srv DeployService_GetBlocksByHeightsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetBlocksByHeights not implemented")
}
func (*UnimplementedDeployServiceServer) GetEventByHash(ctx context.Context, req *BlockQuery) (*EventInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventByHash not implemented")
}

func RegisterDeployServiceServer(s *grpc.Server, srv DeployServiceServer) {
	s.RegisterService(&_DeployService_serviceDesc, srv)
}

func _DeployService_DoDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeployDataProto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).DoDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/casper.v1.DeployService/DoDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).DoDeploy(ctx, req.(*DeployDataProto))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeployService_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/casper.v1.DeployService/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).GetBlock(ctx, req.(*BlockQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeployService_VisualizeDag_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VisualizeDagQuery)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeployServiceServer).VisualizeDag(m, &deployServiceVisualizeDagServer{stream})
}

type DeployService_VisualizeDagServer interface {
	Send(*VisualizeBlocksResponse) error
	grpc.ServerStream
}

type deployServiceVisualizeDagServer struct {
	grpc.ServerStream
}

func (x *deployServiceVisualizeDagServer) Send(m *VisualizeBlocksResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DeployService_MachineVerifiableDag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MachineVerifyQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).MachineVerifiableDag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/casper.v1.DeployService/MachineVerifiableDag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).MachineVerifiableDag(ctx, req.(*MachineVerifyQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeployService_ShowMainChain_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BlocksQuery)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeployServiceServer).ShowMainChain(m, &deployServiceShowMainChainServer{stream})
}

type DeployService_ShowMainChainServer interface {
	Send(*BlockInfoResponse) error
	grpc.ServerStream
}

type deployServiceShowMainChainServer struct {
	grpc.ServerStream
}

func (x *deployServiceShowMainChainServer) Send(m *BlockInfoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DeployService_GetBlocks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BlocksQuery)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeployServiceServer).GetBlocks(m, &deployServiceGetBlocksServer{stream})
}

type DeployService_GetBlocksServer interface {
	Send(*BlockInfoResponse) error
	grpc.ServerStream
}

type deployServiceGetBlocksServer struct {
	grpc.ServerStream
}

func (x *deployServiceGetBlocksServer) Send(m *BlockInfoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DeployService_ListenForDataAtName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataAtNameQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).ListenForDataAtName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/casper.v1.DeployService/ListenForDataAtName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).ListenForDataAtName(ctx, req.(*DataAtNameQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeployService_ListenForContinuationAtName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContinuationAtNameQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).ListenForContinuationAtName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/casper.v1.DeployService/ListenForContinuationAtName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).ListenForContinuationAtName(ctx, req.(*ContinuationAtNameQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeployService_FindDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindDeployQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).FindDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/casper.v1.DeployService/FindDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).FindDeploy(ctx, req.(*FindDeployQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeployService_PreviewPrivateNames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrivateNamePreviewQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).PreviewPrivateNames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/casper.v1.DeployService/PreviewPrivateNames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).PreviewPrivateNames(ctx, req.(*PrivateNamePreviewQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeployService_LastFinalizedBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LastFinalizedBlockQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).LastFinalizedBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/casper.v1.DeployService/LastFinalizedBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).LastFinalizedBlock(ctx, req.(*LastFinalizedBlockQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeployService_IsFinalized_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsFinalizedQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).IsFinalized(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/casper.v1.DeployService/IsFinalized",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).IsFinalized(ctx, req.(*IsFinalizedQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeployService_BondStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BondStatusQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).BondStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/casper.v1.DeployService/BondStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).BondStatus(ctx, req.(*BondStatusQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeployService_ExploratoryDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExploratoryDeployQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).ExploratoryDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/casper.v1.DeployService/ExploratoryDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).ExploratoryDeploy(ctx, req.(*ExploratoryDeployQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeployService_GetBlocksByHeights_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BlocksQueryByHeight)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeployServiceServer).GetBlocksByHeights(m, &deployServiceGetBlocksByHeightsServer{stream})
}

type DeployService_GetBlocksByHeightsServer interface {
	Send(*BlockInfoResponse) error
	grpc.ServerStream
}

type deployServiceGetBlocksByHeightsServer struct {
	grpc.ServerStream
}

func (x *deployServiceGetBlocksByHeightsServer) Send(m *BlockInfoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DeployService_GetEventByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeployServiceServer).GetEventByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/casper.v1.DeployService/GetEventByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeployServiceServer).GetEventByHash(ctx, req.(*BlockQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeployService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "casper.v1.DeployService",
	HandlerType: (*DeployServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "doDeploy",
			Handler:    _DeployService_DoDeploy_Handler,
		},
		{
			MethodName: "getBlock",
			Handler:    _DeployService_GetBlock_Handler,
		},
		{
			MethodName: "machineVerifiableDag",
			Handler:    _DeployService_MachineVerifiableDag_Handler,
		},
		{
			MethodName: "listenForDataAtName",
			Handler:    _DeployService_ListenForDataAtName_Handler,
		},
		{
			MethodName: "listenForContinuationAtName",
			Handler:    _DeployService_ListenForContinuationAtName_Handler,
		},
		{
			MethodName: "findDeploy",
			Handler:    _DeployService_FindDeploy_Handler,
		},
		{
			MethodName: "previewPrivateNames",
			Handler:    _DeployService_PreviewPrivateNames_Handler,
		},
		{
			MethodName: "lastFinalizedBlock",
			Handler:    _DeployService_LastFinalizedBlock_Handler,
		},
		{
			MethodName: "isFinalized",
			Handler:    _DeployService_IsFinalized_Handler,
		},
		{
			MethodName: "bondStatus",
			Handler:    _DeployService_BondStatus_Handler,
		},
		{
			MethodName: "exploratoryDeploy",
			Handler:    _DeployService_ExploratoryDeploy_Handler,
		},
		{
			MethodName: "getEventByHash",
			Handler:    _DeployService_GetEventByHash_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "visualizeDag",
			Handler:       _DeployService_VisualizeDag_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "showMainChain",
			Handler:       _DeployService_ShowMainChain_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "getBlocks",
			Handler:       _DeployService_GetBlocks_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "getBlocksByHeights",
			Handler:       _DeployService_GetBlocksByHeights_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "DeployServiceV1.proto",
}
