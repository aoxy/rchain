// Code generated by protoc-gen-go. DO NOT EDIT.
// source: RhoTypes.proto

package casper_v1

import (
	_ "dawn1806/rchain/api/pb/scalapb"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
// Rholang process
//
// For example, `@0!(1) | @2!(3) | for(x <- @0) { Nil }` has two sends
// and one receive.
//
// The Nil process is a `Par` with no sends, receives, etc.
type Par struct {
	Sends                []*Send         `protobuf:"bytes,1,rep,name=sends,proto3" json:"sends,omitempty"`
	Receives             []*Receive      `protobuf:"bytes,2,rep,name=receives,proto3" json:"receives,omitempty"`
	News                 []*New          `protobuf:"bytes,4,rep,name=news,proto3" json:"news,omitempty"`
	Exprs                []*Expr         `protobuf:"bytes,5,rep,name=exprs,proto3" json:"exprs,omitempty"`
	Matches              []*Match        `protobuf:"bytes,6,rep,name=matches,proto3" json:"matches,omitempty"`
	Unforgeables         []*GUnforgeable `protobuf:"bytes,7,rep,name=unforgeables,proto3" json:"unforgeables,omitempty"`
	Bundles              []*Bundle       `protobuf:"bytes,11,rep,name=bundles,proto3" json:"bundles,omitempty"`
	Connectives          []*Connective   `protobuf:"bytes,8,rep,name=connectives,proto3" json:"connectives,omitempty"`
	LocallyFree          []byte          `protobuf:"bytes,9,opt,name=locallyFree,proto3" json:"locallyFree,omitempty"`
	ConnectiveUsed       bool            `protobuf:"varint,10,opt,name=connective_used,json=connectiveUsed,proto3" json:"connective_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Par) Reset()         { *m = Par{} }
func (m *Par) String() string { return proto.CompactTextString(m) }
func (*Par) ProtoMessage()    {}
func (*Par) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{0}
}

func (m *Par) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Par.Unmarshal(m, b)
}
func (m *Par) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Par.Marshal(b, m, deterministic)
}
func (m *Par) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Par.Merge(m, src)
}
func (m *Par) XXX_Size() int {
	return xxx_messageInfo_Par.Size(m)
}
func (m *Par) XXX_DiscardUnknown() {
	xxx_messageInfo_Par.DiscardUnknown(m)
}

var xxx_messageInfo_Par proto.InternalMessageInfo

func (m *Par) GetSends() []*Send {
	if m != nil {
		return m.Sends
	}
	return nil
}

func (m *Par) GetReceives() []*Receive {
	if m != nil {
		return m.Receives
	}
	return nil
}

func (m *Par) GetNews() []*New {
	if m != nil {
		return m.News
	}
	return nil
}

func (m *Par) GetExprs() []*Expr {
	if m != nil {
		return m.Exprs
	}
	return nil
}

func (m *Par) GetMatches() []*Match {
	if m != nil {
		return m.Matches
	}
	return nil
}

func (m *Par) GetUnforgeables() []*GUnforgeable {
	if m != nil {
		return m.Unforgeables
	}
	return nil
}

func (m *Par) GetBundles() []*Bundle {
	if m != nil {
		return m.Bundles
	}
	return nil
}

func (m *Par) GetConnectives() []*Connective {
	if m != nil {
		return m.Connectives
	}
	return nil
}

func (m *Par) GetLocallyFree() []byte {
	if m != nil {
		return m.LocallyFree
	}
	return nil
}

func (m *Par) GetConnectiveUsed() bool {
	if m != nil {
		return m.ConnectiveUsed
	}
	return false
}

//*
// Either rholang code or code built in to the interpreter.
type TaggedContinuation struct {
	// Types that are valid to be assigned to TaggedCont:
	//	*TaggedContinuation_ParBody
	//	*TaggedContinuation_ScalaBodyRef
	TaggedCont           isTaggedContinuation_TaggedCont `protobuf_oneof:"tagged_cont"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *TaggedContinuation) Reset()         { *m = TaggedContinuation{} }
func (m *TaggedContinuation) String() string { return proto.CompactTextString(m) }
func (*TaggedContinuation) ProtoMessage()    {}
func (*TaggedContinuation) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{1}
}

func (m *TaggedContinuation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaggedContinuation.Unmarshal(m, b)
}
func (m *TaggedContinuation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaggedContinuation.Marshal(b, m, deterministic)
}
func (m *TaggedContinuation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaggedContinuation.Merge(m, src)
}
func (m *TaggedContinuation) XXX_Size() int {
	return xxx_messageInfo_TaggedContinuation.Size(m)
}
func (m *TaggedContinuation) XXX_DiscardUnknown() {
	xxx_messageInfo_TaggedContinuation.DiscardUnknown(m)
}

var xxx_messageInfo_TaggedContinuation proto.InternalMessageInfo

type isTaggedContinuation_TaggedCont interface {
	isTaggedContinuation_TaggedCont()
}

type TaggedContinuation_ParBody struct {
	ParBody *ParWithRandom `protobuf:"bytes,1,opt,name=par_body,json=parBody,proto3,oneof"`
}

type TaggedContinuation_ScalaBodyRef struct {
	ScalaBodyRef int64 `protobuf:"varint,2,opt,name=scala_body_ref,json=scalaBodyRef,proto3,oneof"`
}

func (*TaggedContinuation_ParBody) isTaggedContinuation_TaggedCont() {}

func (*TaggedContinuation_ScalaBodyRef) isTaggedContinuation_TaggedCont() {}

func (m *TaggedContinuation) GetTaggedCont() isTaggedContinuation_TaggedCont {
	if m != nil {
		return m.TaggedCont
	}
	return nil
}

func (m *TaggedContinuation) GetParBody() *ParWithRandom {
	if x, ok := m.GetTaggedCont().(*TaggedContinuation_ParBody); ok {
		return x.ParBody
	}
	return nil
}

func (m *TaggedContinuation) GetScalaBodyRef() int64 {
	if x, ok := m.GetTaggedCont().(*TaggedContinuation_ScalaBodyRef); ok {
		return x.ScalaBodyRef
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TaggedContinuation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TaggedContinuation_ParBody)(nil),
		(*TaggedContinuation_ScalaBodyRef)(nil),
	}
}

//*
// Rholang code along with the state of a split random number
// generator for generating new unforgeable names.
type ParWithRandom struct {
	Body                 *Par     `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	RandomState          []byte   `protobuf:"bytes,2,opt,name=randomState,proto3" json:"randomState,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParWithRandom) Reset()         { *m = ParWithRandom{} }
func (m *ParWithRandom) String() string { return proto.CompactTextString(m) }
func (*ParWithRandom) ProtoMessage()    {}
func (*ParWithRandom) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{2}
}

func (m *ParWithRandom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParWithRandom.Unmarshal(m, b)
}
func (m *ParWithRandom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParWithRandom.Marshal(b, m, deterministic)
}
func (m *ParWithRandom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParWithRandom.Merge(m, src)
}
func (m *ParWithRandom) XXX_Size() int {
	return xxx_messageInfo_ParWithRandom.Size(m)
}
func (m *ParWithRandom) XXX_DiscardUnknown() {
	xxx_messageInfo_ParWithRandom.DiscardUnknown(m)
}

var xxx_messageInfo_ParWithRandom proto.InternalMessageInfo

func (m *ParWithRandom) GetBody() *Par {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *ParWithRandom) GetRandomState() []byte {
	if m != nil {
		return m.RandomState
	}
	return nil
}

//*
// Cost of the performed operations.
type PCost struct {
	Cost                 uint64   `protobuf:"varint,1,opt,name=cost,proto3" json:"cost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PCost) Reset()         { *m = PCost{} }
func (m *PCost) String() string { return proto.CompactTextString(m) }
func (*PCost) ProtoMessage()    {}
func (*PCost) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{3}
}

func (m *PCost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PCost.Unmarshal(m, b)
}
func (m *PCost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PCost.Marshal(b, m, deterministic)
}
func (m *PCost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PCost.Merge(m, src)
}
func (m *PCost) XXX_Size() int {
	return xxx_messageInfo_PCost.Size(m)
}
func (m *PCost) XXX_DiscardUnknown() {
	xxx_messageInfo_PCost.DiscardUnknown(m)
}

var xxx_messageInfo_PCost proto.InternalMessageInfo

func (m *PCost) GetCost() uint64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

type ListParWithRandom struct {
	Pars                 []*Par   `protobuf:"bytes,1,rep,name=pars,proto3" json:"pars,omitempty"`
	RandomState          []byte   `protobuf:"bytes,2,opt,name=randomState,proto3" json:"randomState,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListParWithRandom) Reset()         { *m = ListParWithRandom{} }
func (m *ListParWithRandom) String() string { return proto.CompactTextString(m) }
func (*ListParWithRandom) ProtoMessage()    {}
func (*ListParWithRandom) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{4}
}

func (m *ListParWithRandom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListParWithRandom.Unmarshal(m, b)
}
func (m *ListParWithRandom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListParWithRandom.Marshal(b, m, deterministic)
}
func (m *ListParWithRandom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListParWithRandom.Merge(m, src)
}
func (m *ListParWithRandom) XXX_Size() int {
	return xxx_messageInfo_ListParWithRandom.Size(m)
}
func (m *ListParWithRandom) XXX_DiscardUnknown() {
	xxx_messageInfo_ListParWithRandom.DiscardUnknown(m)
}

var xxx_messageInfo_ListParWithRandom proto.InternalMessageInfo

func (m *ListParWithRandom) GetPars() []*Par {
	if m != nil {
		return m.Pars
	}
	return nil
}

func (m *ListParWithRandom) GetRandomState() []byte {
	if m != nil {
		return m.RandomState
	}
	return nil
}

// While we use vars in both positions, when producing the normalized
// representation we need a discipline to track whether a var is a name or a
// process.
// These are DeBruijn levels
type Var struct {
	// Types that are valid to be assigned to VarInstance:
	//	*Var_BoundVar
	//	*Var_FreeVar
	//	*Var_Wildcard
	VarInstance          isVar_VarInstance `protobuf_oneof:"var_instance"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Var) Reset()         { *m = Var{} }
func (m *Var) String() string { return proto.CompactTextString(m) }
func (*Var) ProtoMessage()    {}
func (*Var) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{5}
}

func (m *Var) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Var.Unmarshal(m, b)
}
func (m *Var) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Var.Marshal(b, m, deterministic)
}
func (m *Var) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Var.Merge(m, src)
}
func (m *Var) XXX_Size() int {
	return xxx_messageInfo_Var.Size(m)
}
func (m *Var) XXX_DiscardUnknown() {
	xxx_messageInfo_Var.DiscardUnknown(m)
}

var xxx_messageInfo_Var proto.InternalMessageInfo

type isVar_VarInstance interface {
	isVar_VarInstance()
}

type Var_BoundVar struct {
	BoundVar int32 `protobuf:"zigzag32,1,opt,name=bound_var,json=boundVar,proto3,oneof"`
}

type Var_FreeVar struct {
	FreeVar int32 `protobuf:"zigzag32,2,opt,name=free_var,json=freeVar,proto3,oneof"`
}

type Var_Wildcard struct {
	Wildcard *Var_WildcardMsg `protobuf:"bytes,3,opt,name=wildcard,proto3,oneof"`
}

func (*Var_BoundVar) isVar_VarInstance() {}

func (*Var_FreeVar) isVar_VarInstance() {}

func (*Var_Wildcard) isVar_VarInstance() {}

func (m *Var) GetVarInstance() isVar_VarInstance {
	if m != nil {
		return m.VarInstance
	}
	return nil
}

func (m *Var) GetBoundVar() int32 {
	if x, ok := m.GetVarInstance().(*Var_BoundVar); ok {
		return x.BoundVar
	}
	return 0
}

func (m *Var) GetFreeVar() int32 {
	if x, ok := m.GetVarInstance().(*Var_FreeVar); ok {
		return x.FreeVar
	}
	return 0
}

func (m *Var) GetWildcard() *Var_WildcardMsg {
	if x, ok := m.GetVarInstance().(*Var_Wildcard); ok {
		return x.Wildcard
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Var) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Var_BoundVar)(nil),
		(*Var_FreeVar)(nil),
		(*Var_Wildcard)(nil),
	}
}

type Var_WildcardMsg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Var_WildcardMsg) Reset()         { *m = Var_WildcardMsg{} }
func (m *Var_WildcardMsg) String() string { return proto.CompactTextString(m) }
func (*Var_WildcardMsg) ProtoMessage()    {}
func (*Var_WildcardMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{5, 0}
}

func (m *Var_WildcardMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Var_WildcardMsg.Unmarshal(m, b)
}
func (m *Var_WildcardMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Var_WildcardMsg.Marshal(b, m, deterministic)
}
func (m *Var_WildcardMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Var_WildcardMsg.Merge(m, src)
}
func (m *Var_WildcardMsg) XXX_Size() int {
	return xxx_messageInfo_Var_WildcardMsg.Size(m)
}
func (m *Var_WildcardMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_Var_WildcardMsg.DiscardUnknown(m)
}

var xxx_messageInfo_Var_WildcardMsg proto.InternalMessageInfo

//*
// Nothing can be received from a (quoted) bundle with `readFlag = false`.
// Likeise nothing can be sent to a (quoted) bundle with `writeFlag = false`.
//
// If both flags are set to false, bundle allows only for equivalance check.
type Bundle struct {
	Body                 *Par     `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	WriteFlag            bool     `protobuf:"varint,2,opt,name=writeFlag,proto3" json:"writeFlag,omitempty"`
	ReadFlag             bool     `protobuf:"varint,3,opt,name=readFlag,proto3" json:"readFlag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bundle) Reset()         { *m = Bundle{} }
func (m *Bundle) String() string { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()    {}
func (*Bundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{6}
}

func (m *Bundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle.Unmarshal(m, b)
}
func (m *Bundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle.Marshal(b, m, deterministic)
}
func (m *Bundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle.Merge(m, src)
}
func (m *Bundle) XXX_Size() int {
	return xxx_messageInfo_Bundle.Size(m)
}
func (m *Bundle) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle proto.InternalMessageInfo

func (m *Bundle) GetBody() *Par {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Bundle) GetWriteFlag() bool {
	if m != nil {
		return m.WriteFlag
	}
	return false
}

func (m *Bundle) GetReadFlag() bool {
	if m != nil {
		return m.ReadFlag
	}
	return false
}

//*
// A send is written `chan!(data)` or `chan!!(data)` for a persistent send.
//
// Upon send, all free variables in data are substituted with their values.
type Send struct {
	Chan                 *Par     `protobuf:"bytes,1,opt,name=chan,proto3" json:"chan,omitempty"`
	Data                 []*Par   `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Persistent           bool     `protobuf:"varint,3,opt,name=persistent,proto3" json:"persistent,omitempty"`
	LocallyFree          []byte   `protobuf:"bytes,5,opt,name=locallyFree,proto3" json:"locallyFree,omitempty"`
	ConnectiveUsed       bool     `protobuf:"varint,6,opt,name=connective_used,json=connectiveUsed,proto3" json:"connective_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Send) Reset()         { *m = Send{} }
func (m *Send) String() string { return proto.CompactTextString(m) }
func (*Send) ProtoMessage()    {}
func (*Send) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{7}
}

func (m *Send) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Send.Unmarshal(m, b)
}
func (m *Send) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Send.Marshal(b, m, deterministic)
}
func (m *Send) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Send.Merge(m, src)
}
func (m *Send) XXX_Size() int {
	return xxx_messageInfo_Send.Size(m)
}
func (m *Send) XXX_DiscardUnknown() {
	xxx_messageInfo_Send.DiscardUnknown(m)
}

var xxx_messageInfo_Send proto.InternalMessageInfo

func (m *Send) GetChan() *Par {
	if m != nil {
		return m.Chan
	}
	return nil
}

func (m *Send) GetData() []*Par {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Send) GetPersistent() bool {
	if m != nil {
		return m.Persistent
	}
	return false
}

func (m *Send) GetLocallyFree() []byte {
	if m != nil {
		return m.LocallyFree
	}
	return nil
}

func (m *Send) GetConnectiveUsed() bool {
	if m != nil {
		return m.ConnectiveUsed
	}
	return false
}

type ReceiveBind struct {
	Patterns             []*Par   `protobuf:"bytes,1,rep,name=patterns,proto3" json:"patterns,omitempty"`
	Source               *Par     `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Remainder            *Var     `protobuf:"bytes,3,opt,name=remainder,proto3" json:"remainder,omitempty"`
	FreeCount            int32    `protobuf:"varint,4,opt,name=freeCount,proto3" json:"freeCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiveBind) Reset()         { *m = ReceiveBind{} }
func (m *ReceiveBind) String() string { return proto.CompactTextString(m) }
func (*ReceiveBind) ProtoMessage()    {}
func (*ReceiveBind) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{8}
}

func (m *ReceiveBind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiveBind.Unmarshal(m, b)
}
func (m *ReceiveBind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiveBind.Marshal(b, m, deterministic)
}
func (m *ReceiveBind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiveBind.Merge(m, src)
}
func (m *ReceiveBind) XXX_Size() int {
	return xxx_messageInfo_ReceiveBind.Size(m)
}
func (m *ReceiveBind) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiveBind.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiveBind proto.InternalMessageInfo

func (m *ReceiveBind) GetPatterns() []*Par {
	if m != nil {
		return m.Patterns
	}
	return nil
}

func (m *ReceiveBind) GetSource() *Par {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ReceiveBind) GetRemainder() *Var {
	if m != nil {
		return m.Remainder
	}
	return nil
}

func (m *ReceiveBind) GetFreeCount() int32 {
	if m != nil {
		return m.FreeCount
	}
	return 0
}

type BindPattern struct {
	Patterns             []*Par   `protobuf:"bytes,1,rep,name=patterns,proto3" json:"patterns,omitempty"`
	Remainder            *Var     `protobuf:"bytes,2,opt,name=remainder,proto3" json:"remainder,omitempty"`
	FreeCount            int32    `protobuf:"varint,3,opt,name=freeCount,proto3" json:"freeCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindPattern) Reset()         { *m = BindPattern{} }
func (m *BindPattern) String() string { return proto.CompactTextString(m) }
func (*BindPattern) ProtoMessage()    {}
func (*BindPattern) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{9}
}

func (m *BindPattern) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindPattern.Unmarshal(m, b)
}
func (m *BindPattern) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindPattern.Marshal(b, m, deterministic)
}
func (m *BindPattern) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindPattern.Merge(m, src)
}
func (m *BindPattern) XXX_Size() int {
	return xxx_messageInfo_BindPattern.Size(m)
}
func (m *BindPattern) XXX_DiscardUnknown() {
	xxx_messageInfo_BindPattern.DiscardUnknown(m)
}

var xxx_messageInfo_BindPattern proto.InternalMessageInfo

func (m *BindPattern) GetPatterns() []*Par {
	if m != nil {
		return m.Patterns
	}
	return nil
}

func (m *BindPattern) GetRemainder() *Var {
	if m != nil {
		return m.Remainder
	}
	return nil
}

func (m *BindPattern) GetFreeCount() int32 {
	if m != nil {
		return m.FreeCount
	}
	return 0
}

type ListBindPatterns struct {
	Patterns             []*BindPattern `protobuf:"bytes,1,rep,name=patterns,proto3" json:"patterns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListBindPatterns) Reset()         { *m = ListBindPatterns{} }
func (m *ListBindPatterns) String() string { return proto.CompactTextString(m) }
func (*ListBindPatterns) ProtoMessage()    {}
func (*ListBindPatterns) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{10}
}

func (m *ListBindPatterns) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBindPatterns.Unmarshal(m, b)
}
func (m *ListBindPatterns) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBindPatterns.Marshal(b, m, deterministic)
}
func (m *ListBindPatterns) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBindPatterns.Merge(m, src)
}
func (m *ListBindPatterns) XXX_Size() int {
	return xxx_messageInfo_ListBindPatterns.Size(m)
}
func (m *ListBindPatterns) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBindPatterns.DiscardUnknown(m)
}

var xxx_messageInfo_ListBindPatterns proto.InternalMessageInfo

func (m *ListBindPatterns) GetPatterns() []*BindPattern {
	if m != nil {
		return m.Patterns
	}
	return nil
}

//*
// A receive is written `for(binds) { body }`
// i.e. `for(patterns <- source) { body }`
// or for a persistent recieve: `for(patterns <= source) { body }`.
//
// It's an error for free Variable to occur more than once in a pattern.
type Receive struct {
	Binds                []*ReceiveBind `protobuf:"bytes,1,rep,name=binds,proto3" json:"binds,omitempty"`
	Body                 *Par           `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Persistent           bool           `protobuf:"varint,3,opt,name=persistent,proto3" json:"persistent,omitempty"`
	Peek                 bool           `protobuf:"varint,4,opt,name=peek,proto3" json:"peek,omitempty"`
	BindCount            int32          `protobuf:"varint,5,opt,name=bindCount,proto3" json:"bindCount,omitempty"`
	LocallyFree          []byte         `protobuf:"bytes,6,opt,name=locallyFree,proto3" json:"locallyFree,omitempty"`
	ConnectiveUsed       bool           `protobuf:"varint,7,opt,name=connective_used,json=connectiveUsed,proto3" json:"connective_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Receive) Reset()         { *m = Receive{} }
func (m *Receive) String() string { return proto.CompactTextString(m) }
func (*Receive) ProtoMessage()    {}
func (*Receive) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{11}
}

func (m *Receive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Receive.Unmarshal(m, b)
}
func (m *Receive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Receive.Marshal(b, m, deterministic)
}
func (m *Receive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Receive.Merge(m, src)
}
func (m *Receive) XXX_Size() int {
	return xxx_messageInfo_Receive.Size(m)
}
func (m *Receive) XXX_DiscardUnknown() {
	xxx_messageInfo_Receive.DiscardUnknown(m)
}

var xxx_messageInfo_Receive proto.InternalMessageInfo

func (m *Receive) GetBinds() []*ReceiveBind {
	if m != nil {
		return m.Binds
	}
	return nil
}

func (m *Receive) GetBody() *Par {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Receive) GetPersistent() bool {
	if m != nil {
		return m.Persistent
	}
	return false
}

func (m *Receive) GetPeek() bool {
	if m != nil {
		return m.Peek
	}
	return false
}

func (m *Receive) GetBindCount() int32 {
	if m != nil {
		return m.BindCount
	}
	return 0
}

func (m *Receive) GetLocallyFree() []byte {
	if m != nil {
		return m.LocallyFree
	}
	return nil
}

func (m *Receive) GetConnectiveUsed() bool {
	if m != nil {
		return m.ConnectiveUsed
	}
	return false
}

// Number of variables bound in the new statement.
// For normalized form, p should not contain solely another new.
// Also for normalized form, the first use should be level+0, next use level+1
// up to level+count for the last used variable.
type New struct {
	// Includes any uris listed below. This makes it easier to substitute or walk a term.
	BindCount int32 `protobuf:"zigzag32,1,opt,name=bindCount,proto3" json:"bindCount,omitempty"`
	P         *Par  `protobuf:"bytes,2,opt,name=p,proto3" json:"p,omitempty"`
	// For normalization, uri-referenced variables come at the end, and in lexicographical order.
	Uri                  []string        `protobuf:"bytes,3,rep,name=uri,proto3" json:"uri,omitempty"`
	Injections           map[string]*Par `protobuf:"bytes,4,rep,name=injections,proto3" json:"injections,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LocallyFree          []byte          `protobuf:"bytes,5,opt,name=locallyFree,proto3" json:"locallyFree,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *New) Reset()         { *m = New{} }
func (m *New) String() string { return proto.CompactTextString(m) }
func (*New) ProtoMessage()    {}
func (*New) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{12}
}

func (m *New) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_New.Unmarshal(m, b)
}
func (m *New) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_New.Marshal(b, m, deterministic)
}
func (m *New) XXX_Merge(src proto.Message) {
	xxx_messageInfo_New.Merge(m, src)
}
func (m *New) XXX_Size() int {
	return xxx_messageInfo_New.Size(m)
}
func (m *New) XXX_DiscardUnknown() {
	xxx_messageInfo_New.DiscardUnknown(m)
}

var xxx_messageInfo_New proto.InternalMessageInfo

func (m *New) GetBindCount() int32 {
	if m != nil {
		return m.BindCount
	}
	return 0
}

func (m *New) GetP() *Par {
	if m != nil {
		return m.P
	}
	return nil
}

func (m *New) GetUri() []string {
	if m != nil {
		return m.Uri
	}
	return nil
}

func (m *New) GetInjections() map[string]*Par {
	if m != nil {
		return m.Injections
	}
	return nil
}

func (m *New) GetLocallyFree() []byte {
	if m != nil {
		return m.LocallyFree
	}
	return nil
}

type MatchCase struct {
	Pattern              *Par     `protobuf:"bytes,1,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Source               *Par     `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	FreeCount            int32    `protobuf:"varint,3,opt,name=freeCount,proto3" json:"freeCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchCase) Reset()         { *m = MatchCase{} }
func (m *MatchCase) String() string { return proto.CompactTextString(m) }
func (*MatchCase) ProtoMessage()    {}
func (*MatchCase) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{13}
}

func (m *MatchCase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchCase.Unmarshal(m, b)
}
func (m *MatchCase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchCase.Marshal(b, m, deterministic)
}
func (m *MatchCase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchCase.Merge(m, src)
}
func (m *MatchCase) XXX_Size() int {
	return xxx_messageInfo_MatchCase.Size(m)
}
func (m *MatchCase) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchCase.DiscardUnknown(m)
}

var xxx_messageInfo_MatchCase proto.InternalMessageInfo

func (m *MatchCase) GetPattern() *Par {
	if m != nil {
		return m.Pattern
	}
	return nil
}

func (m *MatchCase) GetSource() *Par {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *MatchCase) GetFreeCount() int32 {
	if m != nil {
		return m.FreeCount
	}
	return 0
}

type Match struct {
	Target               *Par         `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Cases                []*MatchCase `protobuf:"bytes,2,rep,name=cases,proto3" json:"cases,omitempty"`
	LocallyFree          []byte       `protobuf:"bytes,4,opt,name=locallyFree,proto3" json:"locallyFree,omitempty"`
	ConnectiveUsed       bool         `protobuf:"varint,5,opt,name=connective_used,json=connectiveUsed,proto3" json:"connective_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Match) Reset()         { *m = Match{} }
func (m *Match) String() string { return proto.CompactTextString(m) }
func (*Match) ProtoMessage()    {}
func (*Match) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{14}
}

func (m *Match) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Match.Unmarshal(m, b)
}
func (m *Match) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Match.Marshal(b, m, deterministic)
}
func (m *Match) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Match.Merge(m, src)
}
func (m *Match) XXX_Size() int {
	return xxx_messageInfo_Match.Size(m)
}
func (m *Match) XXX_DiscardUnknown() {
	xxx_messageInfo_Match.DiscardUnknown(m)
}

var xxx_messageInfo_Match proto.InternalMessageInfo

func (m *Match) GetTarget() *Par {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Match) GetCases() []*MatchCase {
	if m != nil {
		return m.Cases
	}
	return nil
}

func (m *Match) GetLocallyFree() []byte {
	if m != nil {
		return m.LocallyFree
	}
	return nil
}

func (m *Match) GetConnectiveUsed() bool {
	if m != nil {
		return m.ConnectiveUsed
	}
	return false
}

// Any process may be an operand to an expression.
// Only processes equivalent to a ground process of compatible type will reduce.
type Expr struct {
	// Types that are valid to be assigned to ExprInstance:
	//	*Expr_GBool
	//	*Expr_GInt
	//	*Expr_GString
	//	*Expr_GUri
	//	*Expr_GByteArray
	//	*Expr_ENotBody
	//	*Expr_ENegBody
	//	*Expr_EMultBody
	//	*Expr_EDivBody
	//	*Expr_EPlusBody
	//	*Expr_EMinusBody
	//	*Expr_ELtBody
	//	*Expr_ELteBody
	//	*Expr_EGtBody
	//	*Expr_EGteBody
	//	*Expr_EEqBody
	//	*Expr_ENeqBody
	//	*Expr_EAndBody
	//	*Expr_EOrBody
	//	*Expr_EVarBody
	//	*Expr_EListBody
	//	*Expr_ETupleBody
	//	*Expr_ESetBody
	//	*Expr_EMapBody
	//	*Expr_EMethodBody
	//	*Expr_EMatchesBody
	//	*Expr_EPercentPercentBody
	//	*Expr_EPlusPlusBody
	//	*Expr_EMinusMinusBody
	//	*Expr_EModBody
	ExprInstance         isExpr_ExprInstance `protobuf_oneof:"expr_instance"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Expr) Reset()         { *m = Expr{} }
func (m *Expr) String() string { return proto.CompactTextString(m) }
func (*Expr) ProtoMessage()    {}
func (*Expr) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{15}
}

func (m *Expr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Expr.Unmarshal(m, b)
}
func (m *Expr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Expr.Marshal(b, m, deterministic)
}
func (m *Expr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Expr.Merge(m, src)
}
func (m *Expr) XXX_Size() int {
	return xxx_messageInfo_Expr.Size(m)
}
func (m *Expr) XXX_DiscardUnknown() {
	xxx_messageInfo_Expr.DiscardUnknown(m)
}

var xxx_messageInfo_Expr proto.InternalMessageInfo

type isExpr_ExprInstance interface {
	isExpr_ExprInstance()
}

type Expr_GBool struct {
	GBool bool `protobuf:"varint,1,opt,name=g_bool,json=gBool,proto3,oneof"`
}

type Expr_GInt struct {
	GInt int64 `protobuf:"zigzag64,2,opt,name=g_int,json=gInt,proto3,oneof"`
}

type Expr_GString struct {
	GString string `protobuf:"bytes,3,opt,name=g_string,json=gString,proto3,oneof"`
}

type Expr_GUri struct {
	GUri string `protobuf:"bytes,4,opt,name=g_uri,json=gUri,proto3,oneof"`
}

type Expr_GByteArray struct {
	GByteArray []byte `protobuf:"bytes,25,opt,name=g_byte_array,json=gByteArray,proto3,oneof"`
}

type Expr_ENotBody struct {
	ENotBody *ENot `protobuf:"bytes,5,opt,name=e_not_body,json=eNotBody,proto3,oneof"`
}

type Expr_ENegBody struct {
	ENegBody *ENeg `protobuf:"bytes,6,opt,name=e_neg_body,json=eNegBody,proto3,oneof"`
}

type Expr_EMultBody struct {
	EMultBody *EMult `protobuf:"bytes,7,opt,name=e_mult_body,json=eMultBody,proto3,oneof"`
}

type Expr_EDivBody struct {
	EDivBody *EDiv `protobuf:"bytes,8,opt,name=e_div_body,json=eDivBody,proto3,oneof"`
}

type Expr_EPlusBody struct {
	EPlusBody *EPlus `protobuf:"bytes,9,opt,name=e_plus_body,json=ePlusBody,proto3,oneof"`
}

type Expr_EMinusBody struct {
	EMinusBody *EMinus `protobuf:"bytes,10,opt,name=e_minus_body,json=eMinusBody,proto3,oneof"`
}

type Expr_ELtBody struct {
	ELtBody *ELt `protobuf:"bytes,11,opt,name=e_lt_body,json=eLtBody,proto3,oneof"`
}

type Expr_ELteBody struct {
	ELteBody *ELte `protobuf:"bytes,12,opt,name=e_lte_body,json=eLteBody,proto3,oneof"`
}

type Expr_EGtBody struct {
	EGtBody *EGt `protobuf:"bytes,13,opt,name=e_gt_body,json=eGtBody,proto3,oneof"`
}

type Expr_EGteBody struct {
	EGteBody *EGte `protobuf:"bytes,14,opt,name=e_gte_body,json=eGteBody,proto3,oneof"`
}

type Expr_EEqBody struct {
	EEqBody *EEq `protobuf:"bytes,15,opt,name=e_eq_body,json=eEqBody,proto3,oneof"`
}

type Expr_ENeqBody struct {
	ENeqBody *ENeq `protobuf:"bytes,16,opt,name=e_neq_body,json=eNeqBody,proto3,oneof"`
}

type Expr_EAndBody struct {
	EAndBody *EAnd `protobuf:"bytes,17,opt,name=e_and_body,json=eAndBody,proto3,oneof"`
}

type Expr_EOrBody struct {
	EOrBody *EOr `protobuf:"bytes,18,opt,name=e_or_body,json=eOrBody,proto3,oneof"`
}

type Expr_EVarBody struct {
	EVarBody *EVar `protobuf:"bytes,19,opt,name=e_var_body,json=eVarBody,proto3,oneof"`
}

type Expr_EListBody struct {
	EListBody *EList `protobuf:"bytes,20,opt,name=e_list_body,json=eListBody,proto3,oneof"`
}

type Expr_ETupleBody struct {
	ETupleBody *ETuple `protobuf:"bytes,21,opt,name=e_tuple_body,json=eTupleBody,proto3,oneof"`
}

type Expr_ESetBody struct {
	ESetBody *ESet `protobuf:"bytes,22,opt,name=e_set_body,json=eSetBody,proto3,oneof"`
}

type Expr_EMapBody struct {
	EMapBody *EMap `protobuf:"bytes,23,opt,name=e_map_body,json=eMapBody,proto3,oneof"`
}

type Expr_EMethodBody struct {
	EMethodBody *EMethod `protobuf:"bytes,24,opt,name=e_method_body,json=eMethodBody,proto3,oneof"`
}

type Expr_EMatchesBody struct {
	EMatchesBody *EMatches `protobuf:"bytes,27,opt,name=e_matches_body,json=eMatchesBody,proto3,oneof"`
}

type Expr_EPercentPercentBody struct {
	EPercentPercentBody *EPercentPercent `protobuf:"bytes,28,opt,name=e_percent_percent_body,json=ePercentPercentBody,proto3,oneof"`
}

type Expr_EPlusPlusBody struct {
	EPlusPlusBody *EPlusPlus `protobuf:"bytes,29,opt,name=e_plus_plus_body,json=ePlusPlusBody,proto3,oneof"`
}

type Expr_EMinusMinusBody struct {
	EMinusMinusBody *EMinusMinus `protobuf:"bytes,30,opt,name=e_minus_minus_body,json=eMinusMinusBody,proto3,oneof"`
}

type Expr_EModBody struct {
	EModBody *EMod `protobuf:"bytes,31,opt,name=e_mod_body,json=eModBody,proto3,oneof"`
}

func (*Expr_GBool) isExpr_ExprInstance() {}

func (*Expr_GInt) isExpr_ExprInstance() {}

func (*Expr_GString) isExpr_ExprInstance() {}

func (*Expr_GUri) isExpr_ExprInstance() {}

func (*Expr_GByteArray) isExpr_ExprInstance() {}

func (*Expr_ENotBody) isExpr_ExprInstance() {}

func (*Expr_ENegBody) isExpr_ExprInstance() {}

func (*Expr_EMultBody) isExpr_ExprInstance() {}

func (*Expr_EDivBody) isExpr_ExprInstance() {}

func (*Expr_EPlusBody) isExpr_ExprInstance() {}

func (*Expr_EMinusBody) isExpr_ExprInstance() {}

func (*Expr_ELtBody) isExpr_ExprInstance() {}

func (*Expr_ELteBody) isExpr_ExprInstance() {}

func (*Expr_EGtBody) isExpr_ExprInstance() {}

func (*Expr_EGteBody) isExpr_ExprInstance() {}

func (*Expr_EEqBody) isExpr_ExprInstance() {}

func (*Expr_ENeqBody) isExpr_ExprInstance() {}

func (*Expr_EAndBody) isExpr_ExprInstance() {}

func (*Expr_EOrBody) isExpr_ExprInstance() {}

func (*Expr_EVarBody) isExpr_ExprInstance() {}

func (*Expr_EListBody) isExpr_ExprInstance() {}

func (*Expr_ETupleBody) isExpr_ExprInstance() {}

func (*Expr_ESetBody) isExpr_ExprInstance() {}

func (*Expr_EMapBody) isExpr_ExprInstance() {}

func (*Expr_EMethodBody) isExpr_ExprInstance() {}

func (*Expr_EMatchesBody) isExpr_ExprInstance() {}

func (*Expr_EPercentPercentBody) isExpr_ExprInstance() {}

func (*Expr_EPlusPlusBody) isExpr_ExprInstance() {}

func (*Expr_EMinusMinusBody) isExpr_ExprInstance() {}

func (*Expr_EModBody) isExpr_ExprInstance() {}

func (m *Expr) GetExprInstance() isExpr_ExprInstance {
	if m != nil {
		return m.ExprInstance
	}
	return nil
}

func (m *Expr) GetGBool() bool {
	if x, ok := m.GetExprInstance().(*Expr_GBool); ok {
		return x.GBool
	}
	return false
}

func (m *Expr) GetGInt() int64 {
	if x, ok := m.GetExprInstance().(*Expr_GInt); ok {
		return x.GInt
	}
	return 0
}

func (m *Expr) GetGString() string {
	if x, ok := m.GetExprInstance().(*Expr_GString); ok {
		return x.GString
	}
	return ""
}

func (m *Expr) GetGUri() string {
	if x, ok := m.GetExprInstance().(*Expr_GUri); ok {
		return x.GUri
	}
	return ""
}

func (m *Expr) GetGByteArray() []byte {
	if x, ok := m.GetExprInstance().(*Expr_GByteArray); ok {
		return x.GByteArray
	}
	return nil
}

func (m *Expr) GetENotBody() *ENot {
	if x, ok := m.GetExprInstance().(*Expr_ENotBody); ok {
		return x.ENotBody
	}
	return nil
}

func (m *Expr) GetENegBody() *ENeg {
	if x, ok := m.GetExprInstance().(*Expr_ENegBody); ok {
		return x.ENegBody
	}
	return nil
}

func (m *Expr) GetEMultBody() *EMult {
	if x, ok := m.GetExprInstance().(*Expr_EMultBody); ok {
		return x.EMultBody
	}
	return nil
}

func (m *Expr) GetEDivBody() *EDiv {
	if x, ok := m.GetExprInstance().(*Expr_EDivBody); ok {
		return x.EDivBody
	}
	return nil
}

func (m *Expr) GetEPlusBody() *EPlus {
	if x, ok := m.GetExprInstance().(*Expr_EPlusBody); ok {
		return x.EPlusBody
	}
	return nil
}

func (m *Expr) GetEMinusBody() *EMinus {
	if x, ok := m.GetExprInstance().(*Expr_EMinusBody); ok {
		return x.EMinusBody
	}
	return nil
}

func (m *Expr) GetELtBody() *ELt {
	if x, ok := m.GetExprInstance().(*Expr_ELtBody); ok {
		return x.ELtBody
	}
	return nil
}

func (m *Expr) GetELteBody() *ELte {
	if x, ok := m.GetExprInstance().(*Expr_ELteBody); ok {
		return x.ELteBody
	}
	return nil
}

func (m *Expr) GetEGtBody() *EGt {
	if x, ok := m.GetExprInstance().(*Expr_EGtBody); ok {
		return x.EGtBody
	}
	return nil
}

func (m *Expr) GetEGteBody() *EGte {
	if x, ok := m.GetExprInstance().(*Expr_EGteBody); ok {
		return x.EGteBody
	}
	return nil
}

func (m *Expr) GetEEqBody() *EEq {
	if x, ok := m.GetExprInstance().(*Expr_EEqBody); ok {
		return x.EEqBody
	}
	return nil
}

func (m *Expr) GetENeqBody() *ENeq {
	if x, ok := m.GetExprInstance().(*Expr_ENeqBody); ok {
		return x.ENeqBody
	}
	return nil
}

func (m *Expr) GetEAndBody() *EAnd {
	if x, ok := m.GetExprInstance().(*Expr_EAndBody); ok {
		return x.EAndBody
	}
	return nil
}

func (m *Expr) GetEOrBody() *EOr {
	if x, ok := m.GetExprInstance().(*Expr_EOrBody); ok {
		return x.EOrBody
	}
	return nil
}

func (m *Expr) GetEVarBody() *EVar {
	if x, ok := m.GetExprInstance().(*Expr_EVarBody); ok {
		return x.EVarBody
	}
	return nil
}

func (m *Expr) GetEListBody() *EList {
	if x, ok := m.GetExprInstance().(*Expr_EListBody); ok {
		return x.EListBody
	}
	return nil
}

func (m *Expr) GetETupleBody() *ETuple {
	if x, ok := m.GetExprInstance().(*Expr_ETupleBody); ok {
		return x.ETupleBody
	}
	return nil
}

func (m *Expr) GetESetBody() *ESet {
	if x, ok := m.GetExprInstance().(*Expr_ESetBody); ok {
		return x.ESetBody
	}
	return nil
}

func (m *Expr) GetEMapBody() *EMap {
	if x, ok := m.GetExprInstance().(*Expr_EMapBody); ok {
		return x.EMapBody
	}
	return nil
}

func (m *Expr) GetEMethodBody() *EMethod {
	if x, ok := m.GetExprInstance().(*Expr_EMethodBody); ok {
		return x.EMethodBody
	}
	return nil
}

func (m *Expr) GetEMatchesBody() *EMatches {
	if x, ok := m.GetExprInstance().(*Expr_EMatchesBody); ok {
		return x.EMatchesBody
	}
	return nil
}

func (m *Expr) GetEPercentPercentBody() *EPercentPercent {
	if x, ok := m.GetExprInstance().(*Expr_EPercentPercentBody); ok {
		return x.EPercentPercentBody
	}
	return nil
}

func (m *Expr) GetEPlusPlusBody() *EPlusPlus {
	if x, ok := m.GetExprInstance().(*Expr_EPlusPlusBody); ok {
		return x.EPlusPlusBody
	}
	return nil
}

func (m *Expr) GetEMinusMinusBody() *EMinusMinus {
	if x, ok := m.GetExprInstance().(*Expr_EMinusMinusBody); ok {
		return x.EMinusMinusBody
	}
	return nil
}

func (m *Expr) GetEModBody() *EMod {
	if x, ok := m.GetExprInstance().(*Expr_EModBody); ok {
		return x.EModBody
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Expr) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Expr_GBool)(nil),
		(*Expr_GInt)(nil),
		(*Expr_GString)(nil),
		(*Expr_GUri)(nil),
		(*Expr_GByteArray)(nil),
		(*Expr_ENotBody)(nil),
		(*Expr_ENegBody)(nil),
		(*Expr_EMultBody)(nil),
		(*Expr_EDivBody)(nil),
		(*Expr_EPlusBody)(nil),
		(*Expr_EMinusBody)(nil),
		(*Expr_ELtBody)(nil),
		(*Expr_ELteBody)(nil),
		(*Expr_EGtBody)(nil),
		(*Expr_EGteBody)(nil),
		(*Expr_EEqBody)(nil),
		(*Expr_ENeqBody)(nil),
		(*Expr_EAndBody)(nil),
		(*Expr_EOrBody)(nil),
		(*Expr_EVarBody)(nil),
		(*Expr_EListBody)(nil),
		(*Expr_ETupleBody)(nil),
		(*Expr_ESetBody)(nil),
		(*Expr_EMapBody)(nil),
		(*Expr_EMethodBody)(nil),
		(*Expr_EMatchesBody)(nil),
		(*Expr_EPercentPercentBody)(nil),
		(*Expr_EPlusPlusBody)(nil),
		(*Expr_EMinusMinusBody)(nil),
		(*Expr_EModBody)(nil),
	}
}

type EList struct {
	Ps                   []*Par   `protobuf:"bytes,1,rep,name=ps,proto3" json:"ps,omitempty"`
	LocallyFree          []byte   `protobuf:"bytes,3,opt,name=locallyFree,proto3" json:"locallyFree,omitempty"`
	ConnectiveUsed       bool     `protobuf:"varint,4,opt,name=connective_used,json=connectiveUsed,proto3" json:"connective_used,omitempty"`
	Remainder            *Var     `protobuf:"bytes,5,opt,name=remainder,proto3" json:"remainder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EList) Reset()         { *m = EList{} }
func (m *EList) String() string { return proto.CompactTextString(m) }
func (*EList) ProtoMessage()    {}
func (*EList) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{16}
}

func (m *EList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EList.Unmarshal(m, b)
}
func (m *EList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EList.Marshal(b, m, deterministic)
}
func (m *EList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EList.Merge(m, src)
}
func (m *EList) XXX_Size() int {
	return xxx_messageInfo_EList.Size(m)
}
func (m *EList) XXX_DiscardUnknown() {
	xxx_messageInfo_EList.DiscardUnknown(m)
}

var xxx_messageInfo_EList proto.InternalMessageInfo

func (m *EList) GetPs() []*Par {
	if m != nil {
		return m.Ps
	}
	return nil
}

func (m *EList) GetLocallyFree() []byte {
	if m != nil {
		return m.LocallyFree
	}
	return nil
}

func (m *EList) GetConnectiveUsed() bool {
	if m != nil {
		return m.ConnectiveUsed
	}
	return false
}

func (m *EList) GetRemainder() *Var {
	if m != nil {
		return m.Remainder
	}
	return nil
}

type ETuple struct {
	Ps                   []*Par   `protobuf:"bytes,1,rep,name=ps,proto3" json:"ps,omitempty"`
	LocallyFree          []byte   `protobuf:"bytes,3,opt,name=locallyFree,proto3" json:"locallyFree,omitempty"`
	ConnectiveUsed       bool     `protobuf:"varint,4,opt,name=connective_used,json=connectiveUsed,proto3" json:"connective_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ETuple) Reset()         { *m = ETuple{} }
func (m *ETuple) String() string { return proto.CompactTextString(m) }
func (*ETuple) ProtoMessage()    {}
func (*ETuple) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{17}
}

func (m *ETuple) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ETuple.Unmarshal(m, b)
}
func (m *ETuple) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ETuple.Marshal(b, m, deterministic)
}
func (m *ETuple) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ETuple.Merge(m, src)
}
func (m *ETuple) XXX_Size() int {
	return xxx_messageInfo_ETuple.Size(m)
}
func (m *ETuple) XXX_DiscardUnknown() {
	xxx_messageInfo_ETuple.DiscardUnknown(m)
}

var xxx_messageInfo_ETuple proto.InternalMessageInfo

func (m *ETuple) GetPs() []*Par {
	if m != nil {
		return m.Ps
	}
	return nil
}

func (m *ETuple) GetLocallyFree() []byte {
	if m != nil {
		return m.LocallyFree
	}
	return nil
}

func (m *ETuple) GetConnectiveUsed() bool {
	if m != nil {
		return m.ConnectiveUsed
	}
	return false
}

type ESet struct {
	Ps                   []*Par   `protobuf:"bytes,1,rep,name=ps,proto3" json:"ps,omitempty"`
	LocallyFree          []byte   `protobuf:"bytes,3,opt,name=locallyFree,proto3" json:"locallyFree,omitempty"`
	ConnectiveUsed       bool     `protobuf:"varint,4,opt,name=connective_used,json=connectiveUsed,proto3" json:"connective_used,omitempty"`
	Remainder            *Var     `protobuf:"bytes,5,opt,name=remainder,proto3" json:"remainder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ESet) Reset()         { *m = ESet{} }
func (m *ESet) String() string { return proto.CompactTextString(m) }
func (*ESet) ProtoMessage()    {}
func (*ESet) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{18}
}

func (m *ESet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ESet.Unmarshal(m, b)
}
func (m *ESet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ESet.Marshal(b, m, deterministic)
}
func (m *ESet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ESet.Merge(m, src)
}
func (m *ESet) XXX_Size() int {
	return xxx_messageInfo_ESet.Size(m)
}
func (m *ESet) XXX_DiscardUnknown() {
	xxx_messageInfo_ESet.DiscardUnknown(m)
}

var xxx_messageInfo_ESet proto.InternalMessageInfo

func (m *ESet) GetPs() []*Par {
	if m != nil {
		return m.Ps
	}
	return nil
}

func (m *ESet) GetLocallyFree() []byte {
	if m != nil {
		return m.LocallyFree
	}
	return nil
}

func (m *ESet) GetConnectiveUsed() bool {
	if m != nil {
		return m.ConnectiveUsed
	}
	return false
}

func (m *ESet) GetRemainder() *Var {
	if m != nil {
		return m.Remainder
	}
	return nil
}

type EMap struct {
	Kvs                  []*KeyValuePair `protobuf:"bytes,1,rep,name=kvs,proto3" json:"kvs,omitempty"`
	LocallyFree          []byte          `protobuf:"bytes,3,opt,name=locallyFree,proto3" json:"locallyFree,omitempty"`
	ConnectiveUsed       bool            `protobuf:"varint,4,opt,name=connective_used,json=connectiveUsed,proto3" json:"connective_used,omitempty"`
	Remainder            *Var            `protobuf:"bytes,5,opt,name=remainder,proto3" json:"remainder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EMap) Reset()         { *m = EMap{} }
func (m *EMap) String() string { return proto.CompactTextString(m) }
func (*EMap) ProtoMessage()    {}
func (*EMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{19}
}

func (m *EMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EMap.Unmarshal(m, b)
}
func (m *EMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EMap.Marshal(b, m, deterministic)
}
func (m *EMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EMap.Merge(m, src)
}
func (m *EMap) XXX_Size() int {
	return xxx_messageInfo_EMap.Size(m)
}
func (m *EMap) XXX_DiscardUnknown() {
	xxx_messageInfo_EMap.DiscardUnknown(m)
}

var xxx_messageInfo_EMap proto.InternalMessageInfo

func (m *EMap) GetKvs() []*KeyValuePair {
	if m != nil {
		return m.Kvs
	}
	return nil
}

func (m *EMap) GetLocallyFree() []byte {
	if m != nil {
		return m.LocallyFree
	}
	return nil
}

func (m *EMap) GetConnectiveUsed() bool {
	if m != nil {
		return m.ConnectiveUsed
	}
	return false
}

func (m *EMap) GetRemainder() *Var {
	if m != nil {
		return m.Remainder
	}
	return nil
}

//*
// `target.method(arguments)`
type EMethod struct {
	MethodName           string   `protobuf:"bytes,1,opt,name=methodName,proto3" json:"methodName,omitempty"`
	Target               *Par     `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Arguments            []*Par   `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
	LocallyFree          []byte   `protobuf:"bytes,5,opt,name=locallyFree,proto3" json:"locallyFree,omitempty"`
	ConnectiveUsed       bool     `protobuf:"varint,6,opt,name=connective_used,json=connectiveUsed,proto3" json:"connective_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EMethod) Reset()         { *m = EMethod{} }
func (m *EMethod) String() string { return proto.CompactTextString(m) }
func (*EMethod) ProtoMessage()    {}
func (*EMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{20}
}

func (m *EMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EMethod.Unmarshal(m, b)
}
func (m *EMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EMethod.Marshal(b, m, deterministic)
}
func (m *EMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EMethod.Merge(m, src)
}
func (m *EMethod) XXX_Size() int {
	return xxx_messageInfo_EMethod.Size(m)
}
func (m *EMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_EMethod.DiscardUnknown(m)
}

var xxx_messageInfo_EMethod proto.InternalMessageInfo

func (m *EMethod) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

func (m *EMethod) GetTarget() *Par {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *EMethod) GetArguments() []*Par {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *EMethod) GetLocallyFree() []byte {
	if m != nil {
		return m.LocallyFree
	}
	return nil
}

func (m *EMethod) GetConnectiveUsed() bool {
	if m != nil {
		return m.ConnectiveUsed
	}
	return false
}

type KeyValuePair struct {
	Key                  *Par     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                *Par     `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValuePair) Reset()         { *m = KeyValuePair{} }
func (m *KeyValuePair) String() string { return proto.CompactTextString(m) }
func (*KeyValuePair) ProtoMessage()    {}
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{21}
}

func (m *KeyValuePair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValuePair.Unmarshal(m, b)
}
func (m *KeyValuePair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValuePair.Marshal(b, m, deterministic)
}
func (m *KeyValuePair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValuePair.Merge(m, src)
}
func (m *KeyValuePair) XXX_Size() int {
	return xxx_messageInfo_KeyValuePair.Size(m)
}
func (m *KeyValuePair) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValuePair.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValuePair proto.InternalMessageInfo

func (m *KeyValuePair) GetKey() *Par {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValuePair) GetValue() *Par {
	if m != nil {
		return m.Value
	}
	return nil
}

// A variable used as a var should be bound in a process context, not a name
// context. For example:
// `for (@x <- c1; @y <- c2) { z!(x + y) }` is fine, but
// `for (x <- c1; y <- c2) { z!(x + y) }` should raise an error.
type EVar struct {
	V                    *Var     `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EVar) Reset()         { *m = EVar{} }
func (m *EVar) String() string { return proto.CompactTextString(m) }
func (*EVar) ProtoMessage()    {}
func (*EVar) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{22}
}

func (m *EVar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EVar.Unmarshal(m, b)
}
func (m *EVar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EVar.Marshal(b, m, deterministic)
}
func (m *EVar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EVar.Merge(m, src)
}
func (m *EVar) XXX_Size() int {
	return xxx_messageInfo_EVar.Size(m)
}
func (m *EVar) XXX_DiscardUnknown() {
	xxx_messageInfo_EVar.DiscardUnknown(m)
}

var xxx_messageInfo_EVar proto.InternalMessageInfo

func (m *EVar) GetV() *Var {
	if m != nil {
		return m.V
	}
	return nil
}

type ENot struct {
	P                    *Par     `protobuf:"bytes,1,opt,name=p,proto3" json:"p,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ENot) Reset()         { *m = ENot{} }
func (m *ENot) String() string { return proto.CompactTextString(m) }
func (*ENot) ProtoMessage()    {}
func (*ENot) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{23}
}

func (m *ENot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENot.Unmarshal(m, b)
}
func (m *ENot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENot.Marshal(b, m, deterministic)
}
func (m *ENot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENot.Merge(m, src)
}
func (m *ENot) XXX_Size() int {
	return xxx_messageInfo_ENot.Size(m)
}
func (m *ENot) XXX_DiscardUnknown() {
	xxx_messageInfo_ENot.DiscardUnknown(m)
}

var xxx_messageInfo_ENot proto.InternalMessageInfo

func (m *ENot) GetP() *Par {
	if m != nil {
		return m.P
	}
	return nil
}

type ENeg struct {
	P                    *Par     `protobuf:"bytes,1,opt,name=p,proto3" json:"p,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ENeg) Reset()         { *m = ENeg{} }
func (m *ENeg) String() string { return proto.CompactTextString(m) }
func (*ENeg) ProtoMessage()    {}
func (*ENeg) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{24}
}

func (m *ENeg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENeg.Unmarshal(m, b)
}
func (m *ENeg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENeg.Marshal(b, m, deterministic)
}
func (m *ENeg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENeg.Merge(m, src)
}
func (m *ENeg) XXX_Size() int {
	return xxx_messageInfo_ENeg.Size(m)
}
func (m *ENeg) XXX_DiscardUnknown() {
	xxx_messageInfo_ENeg.DiscardUnknown(m)
}

var xxx_messageInfo_ENeg proto.InternalMessageInfo

func (m *ENeg) GetP() *Par {
	if m != nil {
		return m.P
	}
	return nil
}

type EMult struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EMult) Reset()         { *m = EMult{} }
func (m *EMult) String() string { return proto.CompactTextString(m) }
func (*EMult) ProtoMessage()    {}
func (*EMult) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{25}
}

func (m *EMult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EMult.Unmarshal(m, b)
}
func (m *EMult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EMult.Marshal(b, m, deterministic)
}
func (m *EMult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EMult.Merge(m, src)
}
func (m *EMult) XXX_Size() int {
	return xxx_messageInfo_EMult.Size(m)
}
func (m *EMult) XXX_DiscardUnknown() {
	xxx_messageInfo_EMult.DiscardUnknown(m)
}

var xxx_messageInfo_EMult proto.InternalMessageInfo

func (m *EMult) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EMult) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type EDiv struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EDiv) Reset()         { *m = EDiv{} }
func (m *EDiv) String() string { return proto.CompactTextString(m) }
func (*EDiv) ProtoMessage()    {}
func (*EDiv) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{26}
}

func (m *EDiv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EDiv.Unmarshal(m, b)
}
func (m *EDiv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EDiv.Marshal(b, m, deterministic)
}
func (m *EDiv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EDiv.Merge(m, src)
}
func (m *EDiv) XXX_Size() int {
	return xxx_messageInfo_EDiv.Size(m)
}
func (m *EDiv) XXX_DiscardUnknown() {
	xxx_messageInfo_EDiv.DiscardUnknown(m)
}

var xxx_messageInfo_EDiv proto.InternalMessageInfo

func (m *EDiv) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EDiv) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type EMod struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EMod) Reset()         { *m = EMod{} }
func (m *EMod) String() string { return proto.CompactTextString(m) }
func (*EMod) ProtoMessage()    {}
func (*EMod) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{27}
}

func (m *EMod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EMod.Unmarshal(m, b)
}
func (m *EMod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EMod.Marshal(b, m, deterministic)
}
func (m *EMod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EMod.Merge(m, src)
}
func (m *EMod) XXX_Size() int {
	return xxx_messageInfo_EMod.Size(m)
}
func (m *EMod) XXX_DiscardUnknown() {
	xxx_messageInfo_EMod.DiscardUnknown(m)
}

var xxx_messageInfo_EMod proto.InternalMessageInfo

func (m *EMod) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EMod) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type EPlus struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EPlus) Reset()         { *m = EPlus{} }
func (m *EPlus) String() string { return proto.CompactTextString(m) }
func (*EPlus) ProtoMessage()    {}
func (*EPlus) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{28}
}

func (m *EPlus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EPlus.Unmarshal(m, b)
}
func (m *EPlus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EPlus.Marshal(b, m, deterministic)
}
func (m *EPlus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EPlus.Merge(m, src)
}
func (m *EPlus) XXX_Size() int {
	return xxx_messageInfo_EPlus.Size(m)
}
func (m *EPlus) XXX_DiscardUnknown() {
	xxx_messageInfo_EPlus.DiscardUnknown(m)
}

var xxx_messageInfo_EPlus proto.InternalMessageInfo

func (m *EPlus) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EPlus) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type EMinus struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EMinus) Reset()         { *m = EMinus{} }
func (m *EMinus) String() string { return proto.CompactTextString(m) }
func (*EMinus) ProtoMessage()    {}
func (*EMinus) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{29}
}

func (m *EMinus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EMinus.Unmarshal(m, b)
}
func (m *EMinus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EMinus.Marshal(b, m, deterministic)
}
func (m *EMinus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EMinus.Merge(m, src)
}
func (m *EMinus) XXX_Size() int {
	return xxx_messageInfo_EMinus.Size(m)
}
func (m *EMinus) XXX_DiscardUnknown() {
	xxx_messageInfo_EMinus.DiscardUnknown(m)
}

var xxx_messageInfo_EMinus proto.InternalMessageInfo

func (m *EMinus) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EMinus) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type ELt struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ELt) Reset()         { *m = ELt{} }
func (m *ELt) String() string { return proto.CompactTextString(m) }
func (*ELt) ProtoMessage()    {}
func (*ELt) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{30}
}

func (m *ELt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ELt.Unmarshal(m, b)
}
func (m *ELt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ELt.Marshal(b, m, deterministic)
}
func (m *ELt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ELt.Merge(m, src)
}
func (m *ELt) XXX_Size() int {
	return xxx_messageInfo_ELt.Size(m)
}
func (m *ELt) XXX_DiscardUnknown() {
	xxx_messageInfo_ELt.DiscardUnknown(m)
}

var xxx_messageInfo_ELt proto.InternalMessageInfo

func (m *ELt) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *ELt) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type ELte struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ELte) Reset()         { *m = ELte{} }
func (m *ELte) String() string { return proto.CompactTextString(m) }
func (*ELte) ProtoMessage()    {}
func (*ELte) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{31}
}

func (m *ELte) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ELte.Unmarshal(m, b)
}
func (m *ELte) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ELte.Marshal(b, m, deterministic)
}
func (m *ELte) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ELte.Merge(m, src)
}
func (m *ELte) XXX_Size() int {
	return xxx_messageInfo_ELte.Size(m)
}
func (m *ELte) XXX_DiscardUnknown() {
	xxx_messageInfo_ELte.DiscardUnknown(m)
}

var xxx_messageInfo_ELte proto.InternalMessageInfo

func (m *ELte) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *ELte) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type EGt struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EGt) Reset()         { *m = EGt{} }
func (m *EGt) String() string { return proto.CompactTextString(m) }
func (*EGt) ProtoMessage()    {}
func (*EGt) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{32}
}

func (m *EGt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EGt.Unmarshal(m, b)
}
func (m *EGt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EGt.Marshal(b, m, deterministic)
}
func (m *EGt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EGt.Merge(m, src)
}
func (m *EGt) XXX_Size() int {
	return xxx_messageInfo_EGt.Size(m)
}
func (m *EGt) XXX_DiscardUnknown() {
	xxx_messageInfo_EGt.DiscardUnknown(m)
}

var xxx_messageInfo_EGt proto.InternalMessageInfo

func (m *EGt) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EGt) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type EGte struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EGte) Reset()         { *m = EGte{} }
func (m *EGte) String() string { return proto.CompactTextString(m) }
func (*EGte) ProtoMessage()    {}
func (*EGte) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{33}
}

func (m *EGte) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EGte.Unmarshal(m, b)
}
func (m *EGte) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EGte.Marshal(b, m, deterministic)
}
func (m *EGte) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EGte.Merge(m, src)
}
func (m *EGte) XXX_Size() int {
	return xxx_messageInfo_EGte.Size(m)
}
func (m *EGte) XXX_DiscardUnknown() {
	xxx_messageInfo_EGte.DiscardUnknown(m)
}

var xxx_messageInfo_EGte proto.InternalMessageInfo

func (m *EGte) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EGte) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type EEq struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EEq) Reset()         { *m = EEq{} }
func (m *EEq) String() string { return proto.CompactTextString(m) }
func (*EEq) ProtoMessage()    {}
func (*EEq) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{34}
}

func (m *EEq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EEq.Unmarshal(m, b)
}
func (m *EEq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EEq.Marshal(b, m, deterministic)
}
func (m *EEq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EEq.Merge(m, src)
}
func (m *EEq) XXX_Size() int {
	return xxx_messageInfo_EEq.Size(m)
}
func (m *EEq) XXX_DiscardUnknown() {
	xxx_messageInfo_EEq.DiscardUnknown(m)
}

var xxx_messageInfo_EEq proto.InternalMessageInfo

func (m *EEq) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EEq) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type ENeq struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ENeq) Reset()         { *m = ENeq{} }
func (m *ENeq) String() string { return proto.CompactTextString(m) }
func (*ENeq) ProtoMessage()    {}
func (*ENeq) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{35}
}

func (m *ENeq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENeq.Unmarshal(m, b)
}
func (m *ENeq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENeq.Marshal(b, m, deterministic)
}
func (m *ENeq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENeq.Merge(m, src)
}
func (m *ENeq) XXX_Size() int {
	return xxx_messageInfo_ENeq.Size(m)
}
func (m *ENeq) XXX_DiscardUnknown() {
	xxx_messageInfo_ENeq.DiscardUnknown(m)
}

var xxx_messageInfo_ENeq proto.InternalMessageInfo

func (m *ENeq) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *ENeq) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type EAnd struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EAnd) Reset()         { *m = EAnd{} }
func (m *EAnd) String() string { return proto.CompactTextString(m) }
func (*EAnd) ProtoMessage()    {}
func (*EAnd) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{36}
}

func (m *EAnd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EAnd.Unmarshal(m, b)
}
func (m *EAnd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EAnd.Marshal(b, m, deterministic)
}
func (m *EAnd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EAnd.Merge(m, src)
}
func (m *EAnd) XXX_Size() int {
	return xxx_messageInfo_EAnd.Size(m)
}
func (m *EAnd) XXX_DiscardUnknown() {
	xxx_messageInfo_EAnd.DiscardUnknown(m)
}

var xxx_messageInfo_EAnd proto.InternalMessageInfo

func (m *EAnd) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EAnd) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type EOr struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EOr) Reset()         { *m = EOr{} }
func (m *EOr) String() string { return proto.CompactTextString(m) }
func (*EOr) ProtoMessage()    {}
func (*EOr) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{37}
}

func (m *EOr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EOr.Unmarshal(m, b)
}
func (m *EOr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EOr.Marshal(b, m, deterministic)
}
func (m *EOr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EOr.Merge(m, src)
}
func (m *EOr) XXX_Size() int {
	return xxx_messageInfo_EOr.Size(m)
}
func (m *EOr) XXX_DiscardUnknown() {
	xxx_messageInfo_EOr.DiscardUnknown(m)
}

var xxx_messageInfo_EOr proto.InternalMessageInfo

func (m *EOr) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EOr) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type EMatches struct {
	Target               *Par     `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Pattern              *Par     `protobuf:"bytes,2,opt,name=pattern,proto3" json:"pattern,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EMatches) Reset()         { *m = EMatches{} }
func (m *EMatches) String() string { return proto.CompactTextString(m) }
func (*EMatches) ProtoMessage()    {}
func (*EMatches) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{38}
}

func (m *EMatches) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EMatches.Unmarshal(m, b)
}
func (m *EMatches) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EMatches.Marshal(b, m, deterministic)
}
func (m *EMatches) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EMatches.Merge(m, src)
}
func (m *EMatches) XXX_Size() int {
	return xxx_messageInfo_EMatches.Size(m)
}
func (m *EMatches) XXX_DiscardUnknown() {
	xxx_messageInfo_EMatches.DiscardUnknown(m)
}

var xxx_messageInfo_EMatches proto.InternalMessageInfo

func (m *EMatches) GetTarget() *Par {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *EMatches) GetPattern() *Par {
	if m != nil {
		return m.Pattern
	}
	return nil
}

//*
// String interpolation
//
// `"Hello, {name}" %% {"name": "Bob"}` denotes `"Hello, Bob"`
type EPercentPercent struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EPercentPercent) Reset()         { *m = EPercentPercent{} }
func (m *EPercentPercent) String() string { return proto.CompactTextString(m) }
func (*EPercentPercent) ProtoMessage()    {}
func (*EPercentPercent) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{39}
}

func (m *EPercentPercent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EPercentPercent.Unmarshal(m, b)
}
func (m *EPercentPercent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EPercentPercent.Marshal(b, m, deterministic)
}
func (m *EPercentPercent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EPercentPercent.Merge(m, src)
}
func (m *EPercentPercent) XXX_Size() int {
	return xxx_messageInfo_EPercentPercent.Size(m)
}
func (m *EPercentPercent) XXX_DiscardUnknown() {
	xxx_messageInfo_EPercentPercent.DiscardUnknown(m)
}

var xxx_messageInfo_EPercentPercent proto.InternalMessageInfo

func (m *EPercentPercent) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EPercentPercent) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

// Concatenation
type EPlusPlus struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EPlusPlus) Reset()         { *m = EPlusPlus{} }
func (m *EPlusPlus) String() string { return proto.CompactTextString(m) }
func (*EPlusPlus) ProtoMessage()    {}
func (*EPlusPlus) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{40}
}

func (m *EPlusPlus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EPlusPlus.Unmarshal(m, b)
}
func (m *EPlusPlus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EPlusPlus.Marshal(b, m, deterministic)
}
func (m *EPlusPlus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EPlusPlus.Merge(m, src)
}
func (m *EPlusPlus) XXX_Size() int {
	return xxx_messageInfo_EPlusPlus.Size(m)
}
func (m *EPlusPlus) XXX_DiscardUnknown() {
	xxx_messageInfo_EPlusPlus.DiscardUnknown(m)
}

var xxx_messageInfo_EPlusPlus proto.InternalMessageInfo

func (m *EPlusPlus) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EPlusPlus) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

// Set difference
type EMinusMinus struct {
	P1                   *Par     `protobuf:"bytes,1,opt,name=p1,proto3" json:"p1,omitempty"`
	P2                   *Par     `protobuf:"bytes,2,opt,name=p2,proto3" json:"p2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EMinusMinus) Reset()         { *m = EMinusMinus{} }
func (m *EMinusMinus) String() string { return proto.CompactTextString(m) }
func (*EMinusMinus) ProtoMessage()    {}
func (*EMinusMinus) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{41}
}

func (m *EMinusMinus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EMinusMinus.Unmarshal(m, b)
}
func (m *EMinusMinus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EMinusMinus.Marshal(b, m, deterministic)
}
func (m *EMinusMinus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EMinusMinus.Merge(m, src)
}
func (m *EMinusMinus) XXX_Size() int {
	return xxx_messageInfo_EMinusMinus.Size(m)
}
func (m *EMinusMinus) XXX_DiscardUnknown() {
	xxx_messageInfo_EMinusMinus.DiscardUnknown(m)
}

var xxx_messageInfo_EMinusMinus proto.InternalMessageInfo

func (m *EMinusMinus) GetP1() *Par {
	if m != nil {
		return m.P1
	}
	return nil
}

func (m *EMinusMinus) GetP2() *Par {
	if m != nil {
		return m.P2
	}
	return nil
}

type Connective struct {
	// Types that are valid to be assigned to ConnectiveInstance:
	//	*Connective_ConnAndBody
	//	*Connective_ConnOrBody
	//	*Connective_ConnNotBody
	//	*Connective_VarRefBody
	//	*Connective_ConnBool
	//	*Connective_ConnInt
	//	*Connective_ConnString
	//	*Connective_ConnUri
	//	*Connective_ConnByteArray
	ConnectiveInstance   isConnective_ConnectiveInstance `protobuf_oneof:"connective_instance"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Connective) Reset()         { *m = Connective{} }
func (m *Connective) String() string { return proto.CompactTextString(m) }
func (*Connective) ProtoMessage()    {}
func (*Connective) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{42}
}

func (m *Connective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connective.Unmarshal(m, b)
}
func (m *Connective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connective.Marshal(b, m, deterministic)
}
func (m *Connective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connective.Merge(m, src)
}
func (m *Connective) XXX_Size() int {
	return xxx_messageInfo_Connective.Size(m)
}
func (m *Connective) XXX_DiscardUnknown() {
	xxx_messageInfo_Connective.DiscardUnknown(m)
}

var xxx_messageInfo_Connective proto.InternalMessageInfo

type isConnective_ConnectiveInstance interface {
	isConnective_ConnectiveInstance()
}

type Connective_ConnAndBody struct {
	ConnAndBody *ConnectiveBody `protobuf:"bytes,1,opt,name=conn_and_body,json=connAndBody,proto3,oneof"`
}

type Connective_ConnOrBody struct {
	ConnOrBody *ConnectiveBody `protobuf:"bytes,2,opt,name=conn_or_body,json=connOrBody,proto3,oneof"`
}

type Connective_ConnNotBody struct {
	ConnNotBody *Par `protobuf:"bytes,3,opt,name=conn_not_body,json=connNotBody,proto3,oneof"`
}

type Connective_VarRefBody struct {
	VarRefBody *VarRef `protobuf:"bytes,4,opt,name=var_ref_body,json=varRefBody,proto3,oneof"`
}

type Connective_ConnBool struct {
	ConnBool bool `protobuf:"varint,5,opt,name=conn_bool,json=connBool,proto3,oneof"`
}

type Connective_ConnInt struct {
	ConnInt bool `protobuf:"varint,6,opt,name=conn_int,json=connInt,proto3,oneof"`
}

type Connective_ConnString struct {
	ConnString bool `protobuf:"varint,7,opt,name=conn_string,json=connString,proto3,oneof"`
}

type Connective_ConnUri struct {
	ConnUri bool `protobuf:"varint,8,opt,name=conn_uri,json=connUri,proto3,oneof"`
}

type Connective_ConnByteArray struct {
	ConnByteArray bool `protobuf:"varint,9,opt,name=conn_byte_array,json=connByteArray,proto3,oneof"`
}

func (*Connective_ConnAndBody) isConnective_ConnectiveInstance() {}

func (*Connective_ConnOrBody) isConnective_ConnectiveInstance() {}

func (*Connective_ConnNotBody) isConnective_ConnectiveInstance() {}

func (*Connective_VarRefBody) isConnective_ConnectiveInstance() {}

func (*Connective_ConnBool) isConnective_ConnectiveInstance() {}

func (*Connective_ConnInt) isConnective_ConnectiveInstance() {}

func (*Connective_ConnString) isConnective_ConnectiveInstance() {}

func (*Connective_ConnUri) isConnective_ConnectiveInstance() {}

func (*Connective_ConnByteArray) isConnective_ConnectiveInstance() {}

func (m *Connective) GetConnectiveInstance() isConnective_ConnectiveInstance {
	if m != nil {
		return m.ConnectiveInstance
	}
	return nil
}

func (m *Connective) GetConnAndBody() *ConnectiveBody {
	if x, ok := m.GetConnectiveInstance().(*Connective_ConnAndBody); ok {
		return x.ConnAndBody
	}
	return nil
}

func (m *Connective) GetConnOrBody() *ConnectiveBody {
	if x, ok := m.GetConnectiveInstance().(*Connective_ConnOrBody); ok {
		return x.ConnOrBody
	}
	return nil
}

func (m *Connective) GetConnNotBody() *Par {
	if x, ok := m.GetConnectiveInstance().(*Connective_ConnNotBody); ok {
		return x.ConnNotBody
	}
	return nil
}

func (m *Connective) GetVarRefBody() *VarRef {
	if x, ok := m.GetConnectiveInstance().(*Connective_VarRefBody); ok {
		return x.VarRefBody
	}
	return nil
}

func (m *Connective) GetConnBool() bool {
	if x, ok := m.GetConnectiveInstance().(*Connective_ConnBool); ok {
		return x.ConnBool
	}
	return false
}

func (m *Connective) GetConnInt() bool {
	if x, ok := m.GetConnectiveInstance().(*Connective_ConnInt); ok {
		return x.ConnInt
	}
	return false
}

func (m *Connective) GetConnString() bool {
	if x, ok := m.GetConnectiveInstance().(*Connective_ConnString); ok {
		return x.ConnString
	}
	return false
}

func (m *Connective) GetConnUri() bool {
	if x, ok := m.GetConnectiveInstance().(*Connective_ConnUri); ok {
		return x.ConnUri
	}
	return false
}

func (m *Connective) GetConnByteArray() bool {
	if x, ok := m.GetConnectiveInstance().(*Connective_ConnByteArray); ok {
		return x.ConnByteArray
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Connective) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Connective_ConnAndBody)(nil),
		(*Connective_ConnOrBody)(nil),
		(*Connective_ConnNotBody)(nil),
		(*Connective_VarRefBody)(nil),
		(*Connective_ConnBool)(nil),
		(*Connective_ConnInt)(nil),
		(*Connective_ConnString)(nil),
		(*Connective_ConnUri)(nil),
		(*Connective_ConnByteArray)(nil),
	}
}

type VarRef struct {
	Index                int32    `protobuf:"zigzag32,1,opt,name=index,proto3" json:"index,omitempty"`
	Depth                int32    `protobuf:"zigzag32,2,opt,name=depth,proto3" json:"depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VarRef) Reset()         { *m = VarRef{} }
func (m *VarRef) String() string { return proto.CompactTextString(m) }
func (*VarRef) ProtoMessage()    {}
func (*VarRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{43}
}

func (m *VarRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VarRef.Unmarshal(m, b)
}
func (m *VarRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VarRef.Marshal(b, m, deterministic)
}
func (m *VarRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VarRef.Merge(m, src)
}
func (m *VarRef) XXX_Size() int {
	return xxx_messageInfo_VarRef.Size(m)
}
func (m *VarRef) XXX_DiscardUnknown() {
	xxx_messageInfo_VarRef.DiscardUnknown(m)
}

var xxx_messageInfo_VarRef proto.InternalMessageInfo

func (m *VarRef) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *VarRef) GetDepth() int32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

type ConnectiveBody struct {
	Ps                   []*Par   `protobuf:"bytes,1,rep,name=ps,proto3" json:"ps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectiveBody) Reset()         { *m = ConnectiveBody{} }
func (m *ConnectiveBody) String() string { return proto.CompactTextString(m) }
func (*ConnectiveBody) ProtoMessage()    {}
func (*ConnectiveBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{44}
}

func (m *ConnectiveBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectiveBody.Unmarshal(m, b)
}
func (m *ConnectiveBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectiveBody.Marshal(b, m, deterministic)
}
func (m *ConnectiveBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectiveBody.Merge(m, src)
}
func (m *ConnectiveBody) XXX_Size() int {
	return xxx_messageInfo_ConnectiveBody.Size(m)
}
func (m *ConnectiveBody) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectiveBody.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectiveBody proto.InternalMessageInfo

func (m *ConnectiveBody) GetPs() []*Par {
	if m != nil {
		return m.Ps
	}
	return nil
}

type DeployId struct {
	Sig                  []byte   `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployId) Reset()         { *m = DeployId{} }
func (m *DeployId) String() string { return proto.CompactTextString(m) }
func (*DeployId) ProtoMessage()    {}
func (*DeployId) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{45}
}

func (m *DeployId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployId.Unmarshal(m, b)
}
func (m *DeployId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployId.Marshal(b, m, deterministic)
}
func (m *DeployId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployId.Merge(m, src)
}
func (m *DeployId) XXX_Size() int {
	return xxx_messageInfo_DeployId.Size(m)
}
func (m *DeployId) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployId.DiscardUnknown(m)
}

var xxx_messageInfo_DeployId proto.InternalMessageInfo

func (m *DeployId) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type DeployerId struct {
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployerId) Reset()         { *m = DeployerId{} }
func (m *DeployerId) String() string { return proto.CompactTextString(m) }
func (*DeployerId) ProtoMessage()    {}
func (*DeployerId) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{46}
}

func (m *DeployerId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployerId.Unmarshal(m, b)
}
func (m *DeployerId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployerId.Marshal(b, m, deterministic)
}
func (m *DeployerId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployerId.Merge(m, src)
}
func (m *DeployerId) XXX_Size() int {
	return xxx_messageInfo_DeployerId.Size(m)
}
func (m *DeployerId) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployerId.DiscardUnknown(m)
}

var xxx_messageInfo_DeployerId proto.InternalMessageInfo

func (m *DeployerId) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

// Unforgeable names resulting from `new x { ... }`
// These should only occur as the program is being evaluated. There is no way in
// the grammar to construct them.
type GUnforgeable struct {
	// Types that are valid to be assigned to UnfInstance:
	//	*GUnforgeable_GPrivateBody
	//	*GUnforgeable_GDeployIdBody
	//	*GUnforgeable_GDeployerIdBody
	//	*GUnforgeable_GSysAuthTokenBody
	UnfInstance          isGUnforgeable_UnfInstance `protobuf_oneof:"unf_instance"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GUnforgeable) Reset()         { *m = GUnforgeable{} }
func (m *GUnforgeable) String() string { return proto.CompactTextString(m) }
func (*GUnforgeable) ProtoMessage()    {}
func (*GUnforgeable) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{47}
}

func (m *GUnforgeable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GUnforgeable.Unmarshal(m, b)
}
func (m *GUnforgeable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GUnforgeable.Marshal(b, m, deterministic)
}
func (m *GUnforgeable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GUnforgeable.Merge(m, src)
}
func (m *GUnforgeable) XXX_Size() int {
	return xxx_messageInfo_GUnforgeable.Size(m)
}
func (m *GUnforgeable) XXX_DiscardUnknown() {
	xxx_messageInfo_GUnforgeable.DiscardUnknown(m)
}

var xxx_messageInfo_GUnforgeable proto.InternalMessageInfo

type isGUnforgeable_UnfInstance interface {
	isGUnforgeable_UnfInstance()
}

type GUnforgeable_GPrivateBody struct {
	GPrivateBody *GPrivate `protobuf:"bytes,1,opt,name=g_private_body,json=gPrivateBody,proto3,oneof"`
}

type GUnforgeable_GDeployIdBody struct {
	GDeployIdBody *GDeployId `protobuf:"bytes,2,opt,name=g_deploy_id_body,json=gDeployIdBody,proto3,oneof"`
}

type GUnforgeable_GDeployerIdBody struct {
	GDeployerIdBody *GDeployerId `protobuf:"bytes,3,opt,name=g_deployer_id_body,json=gDeployerIdBody,proto3,oneof"`
}

type GUnforgeable_GSysAuthTokenBody struct {
	GSysAuthTokenBody *GSysAuthToken `protobuf:"bytes,4,opt,name=g_sys_auth_token_body,json=gSysAuthTokenBody,proto3,oneof"`
}

func (*GUnforgeable_GPrivateBody) isGUnforgeable_UnfInstance() {}

func (*GUnforgeable_GDeployIdBody) isGUnforgeable_UnfInstance() {}

func (*GUnforgeable_GDeployerIdBody) isGUnforgeable_UnfInstance() {}

func (*GUnforgeable_GSysAuthTokenBody) isGUnforgeable_UnfInstance() {}

func (m *GUnforgeable) GetUnfInstance() isGUnforgeable_UnfInstance {
	if m != nil {
		return m.UnfInstance
	}
	return nil
}

func (m *GUnforgeable) GetGPrivateBody() *GPrivate {
	if x, ok := m.GetUnfInstance().(*GUnforgeable_GPrivateBody); ok {
		return x.GPrivateBody
	}
	return nil
}

func (m *GUnforgeable) GetGDeployIdBody() *GDeployId {
	if x, ok := m.GetUnfInstance().(*GUnforgeable_GDeployIdBody); ok {
		return x.GDeployIdBody
	}
	return nil
}

func (m *GUnforgeable) GetGDeployerIdBody() *GDeployerId {
	if x, ok := m.GetUnfInstance().(*GUnforgeable_GDeployerIdBody); ok {
		return x.GDeployerIdBody
	}
	return nil
}

func (m *GUnforgeable) GetGSysAuthTokenBody() *GSysAuthToken {
	if x, ok := m.GetUnfInstance().(*GUnforgeable_GSysAuthTokenBody); ok {
		return x.GSysAuthTokenBody
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GUnforgeable) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GUnforgeable_GPrivateBody)(nil),
		(*GUnforgeable_GDeployIdBody)(nil),
		(*GUnforgeable_GDeployerIdBody)(nil),
		(*GUnforgeable_GSysAuthTokenBody)(nil),
	}
}

type GPrivate struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GPrivate) Reset()         { *m = GPrivate{} }
func (m *GPrivate) String() string { return proto.CompactTextString(m) }
func (*GPrivate) ProtoMessage()    {}
func (*GPrivate) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{48}
}

func (m *GPrivate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GPrivate.Unmarshal(m, b)
}
func (m *GPrivate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GPrivate.Marshal(b, m, deterministic)
}
func (m *GPrivate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GPrivate.Merge(m, src)
}
func (m *GPrivate) XXX_Size() int {
	return xxx_messageInfo_GPrivate.Size(m)
}
func (m *GPrivate) XXX_DiscardUnknown() {
	xxx_messageInfo_GPrivate.DiscardUnknown(m)
}

var xxx_messageInfo_GPrivate proto.InternalMessageInfo

func (m *GPrivate) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type GDeployId struct {
	Sig                  []byte   `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GDeployId) Reset()         { *m = GDeployId{} }
func (m *GDeployId) String() string { return proto.CompactTextString(m) }
func (*GDeployId) ProtoMessage()    {}
func (*GDeployId) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{49}
}

func (m *GDeployId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDeployId.Unmarshal(m, b)
}
func (m *GDeployId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDeployId.Marshal(b, m, deterministic)
}
func (m *GDeployId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDeployId.Merge(m, src)
}
func (m *GDeployId) XXX_Size() int {
	return xxx_messageInfo_GDeployId.Size(m)
}
func (m *GDeployId) XXX_DiscardUnknown() {
	xxx_messageInfo_GDeployId.DiscardUnknown(m)
}

var xxx_messageInfo_GDeployId proto.InternalMessageInfo

func (m *GDeployId) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type GDeployerId struct {
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GDeployerId) Reset()         { *m = GDeployerId{} }
func (m *GDeployerId) String() string { return proto.CompactTextString(m) }
func (*GDeployerId) ProtoMessage()    {}
func (*GDeployerId) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{50}
}

func (m *GDeployerId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GDeployerId.Unmarshal(m, b)
}
func (m *GDeployerId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GDeployerId.Marshal(b, m, deterministic)
}
func (m *GDeployerId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GDeployerId.Merge(m, src)
}
func (m *GDeployerId) XXX_Size() int {
	return xxx_messageInfo_GDeployerId.Size(m)
}
func (m *GDeployerId) XXX_DiscardUnknown() {
	xxx_messageInfo_GDeployerId.DiscardUnknown(m)
}

var xxx_messageInfo_GDeployerId proto.InternalMessageInfo

func (m *GDeployerId) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type GSysAuthToken struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GSysAuthToken) Reset()         { *m = GSysAuthToken{} }
func (m *GSysAuthToken) String() string { return proto.CompactTextString(m) }
func (*GSysAuthToken) ProtoMessage()    {}
func (*GSysAuthToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_397594b769004b5e, []int{51}
}

func (m *GSysAuthToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GSysAuthToken.Unmarshal(m, b)
}
func (m *GSysAuthToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GSysAuthToken.Marshal(b, m, deterministic)
}
func (m *GSysAuthToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GSysAuthToken.Merge(m, src)
}
func (m *GSysAuthToken) XXX_Size() int {
	return xxx_messageInfo_GSysAuthToken.Size(m)
}
func (m *GSysAuthToken) XXX_DiscardUnknown() {
	xxx_messageInfo_GSysAuthToken.DiscardUnknown(m)
}

var xxx_messageInfo_GSysAuthToken proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Par)(nil), "Par")
	proto.RegisterType((*TaggedContinuation)(nil), "TaggedContinuation")
	proto.RegisterType((*ParWithRandom)(nil), "ParWithRandom")
	proto.RegisterType((*PCost)(nil), "PCost")
	proto.RegisterType((*ListParWithRandom)(nil), "ListParWithRandom")
	proto.RegisterType((*Var)(nil), "Var")
	proto.RegisterType((*Var_WildcardMsg)(nil), "Var.WildcardMsg")
	proto.RegisterType((*Bundle)(nil), "Bundle")
	proto.RegisterType((*Send)(nil), "Send")
	proto.RegisterType((*ReceiveBind)(nil), "ReceiveBind")
	proto.RegisterType((*BindPattern)(nil), "BindPattern")
	proto.RegisterType((*ListBindPatterns)(nil), "ListBindPatterns")
	proto.RegisterType((*Receive)(nil), "Receive")
	proto.RegisterType((*New)(nil), "New")
	proto.RegisterMapType((map[string]*Par)(nil), "New.InjectionsEntry")
	proto.RegisterType((*MatchCase)(nil), "MatchCase")
	proto.RegisterType((*Match)(nil), "Match")
	proto.RegisterType((*Expr)(nil), "Expr")
	proto.RegisterType((*EList)(nil), "EList")
	proto.RegisterType((*ETuple)(nil), "ETuple")
	proto.RegisterType((*ESet)(nil), "ESet")
	proto.RegisterType((*EMap)(nil), "EMap")
	proto.RegisterType((*EMethod)(nil), "EMethod")
	proto.RegisterType((*KeyValuePair)(nil), "KeyValuePair")
	proto.RegisterType((*EVar)(nil), "EVar")
	proto.RegisterType((*ENot)(nil), "ENot")
	proto.RegisterType((*ENeg)(nil), "ENeg")
	proto.RegisterType((*EMult)(nil), "EMult")
	proto.RegisterType((*EDiv)(nil), "EDiv")
	proto.RegisterType((*EMod)(nil), "EMod")
	proto.RegisterType((*EPlus)(nil), "EPlus")
	proto.RegisterType((*EMinus)(nil), "EMinus")
	proto.RegisterType((*ELt)(nil), "ELt")
	proto.RegisterType((*ELte)(nil), "ELte")
	proto.RegisterType((*EGt)(nil), "EGt")
	proto.RegisterType((*EGte)(nil), "EGte")
	proto.RegisterType((*EEq)(nil), "EEq")
	proto.RegisterType((*ENeq)(nil), "ENeq")
	proto.RegisterType((*EAnd)(nil), "EAnd")
	proto.RegisterType((*EOr)(nil), "EOr")
	proto.RegisterType((*EMatches)(nil), "EMatches")
	proto.RegisterType((*EPercentPercent)(nil), "EPercentPercent")
	proto.RegisterType((*EPlusPlus)(nil), "EPlusPlus")
	proto.RegisterType((*EMinusMinus)(nil), "EMinusMinus")
	proto.RegisterType((*Connective)(nil), "Connective")
	proto.RegisterType((*VarRef)(nil), "VarRef")
	proto.RegisterType((*ConnectiveBody)(nil), "ConnectiveBody")
	proto.RegisterType((*DeployId)(nil), "DeployId")
	proto.RegisterType((*DeployerId)(nil), "DeployerId")
	proto.RegisterType((*GUnforgeable)(nil), "GUnforgeable")
	proto.RegisterType((*GPrivate)(nil), "GPrivate")
	proto.RegisterType((*GDeployId)(nil), "GDeployId")
	proto.RegisterType((*GDeployerId)(nil), "GDeployerId")
	proto.RegisterType((*GSysAuthToken)(nil), "GSysAuthToken")
}

func init() { proto.RegisterFile("RhoTypes.proto", fileDescriptor_397594b769004b5e) }

var fileDescriptor_397594b769004b5e = []byte{
	// 2324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x59, 0xcd, 0x6e, 0x1b, 0xc9,
	0x11, 0xd6, 0xf0, 0x9f, 0x45, 0xea, 0xc7, 0xbd, 0xf6, 0x2e, 0x57, 0xfe, 0x59, 0xed, 0x60, 0xe3,
	0x08, 0x36, 0x76, 0x02, 0x6b, 0xd7, 0xc1, 0x22, 0x09, 0x60, 0x88, 0x32, 0x4d, 0x19, 0x2b, 0xca,
	0xc2, 0xc8, 0xd6, 0x06, 0x08, 0x82, 0x41, 0x93, 0xd3, 0x1a, 0x4e, 0x3c, 0x9c, 0x19, 0xf5, 0x34,
	0x29, 0xf3, 0x92, 0x43, 0x0e, 0x01, 0x72, 0x09, 0x72, 0x08, 0x90, 0xe7, 0x08, 0x10, 0x04, 0xc8,
	0x35, 0x87, 0xbc, 0x40, 0x72, 0xce, 0x41, 0x4f, 0x90, 0x4b, 0xee, 0x41, 0x57, 0xf7, 0x70, 0x86,
	0x32, 0xad, 0x08, 0xe0, 0xc2, 0xc8, 0xe6, 0xa4, 0x9e, 0xaa, 0xaf, 0xbf, 0xaa, 0xae, 0xae, 0xee,
	0xae, 0x12, 0x61, 0xcd, 0x1e, 0x46, 0x2f, 0xa7, 0x31, 0x4b, 0xac, 0x98, 0x47, 0x22, 0xda, 0xbc,
	0x95, 0x0c, 0x68, 0x40, 0xe3, 0xfe, 0x0f, 0xf4, 0x5f, 0x25, 0x36, 0xff, 0x52, 0x84, 0xe2, 0x11,
	0xe5, 0xe4, 0x36, 0x94, 0x13, 0x16, 0xba, 0x49, 0xcb, 0xd8, 0x2a, 0x6e, 0x37, 0x76, 0xca, 0xd6,
	0x31, 0x0b, 0x5d, 0x5b, 0xc9, 0xc8, 0x67, 0x50, 0xe3, 0x6c, 0xc0, 0xfc, 0x09, 0x4b, 0x5a, 0x05,
	0xd4, 0xd7, 0x2c, 0x5b, 0x09, 0xec, 0x99, 0x86, 0xb4, 0xa0, 0x14, 0xb2, 0xf3, 0xa4, 0x55, 0x42,
	0x44, 0xc9, 0x3a, 0x64, 0xe7, 0x36, 0x4a, 0x24, 0x39, 0x7b, 0x13, 0xf3, 0xa4, 0x55, 0xd6, 0xe4,
	0x9d, 0x37, 0x31, 0xb7, 0x95, 0x8c, 0x6c, 0x41, 0x75, 0x44, 0xc5, 0x60, 0xc8, 0x92, 0x56, 0x05,
	0xd5, 0x15, 0xab, 0x27, 0xbf, 0xed, 0x54, 0x4c, 0x1e, 0x41, 0x73, 0x1c, 0x9e, 0x46, 0xdc, 0x63,
	0xb4, 0x1f, 0xb0, 0xa4, 0x55, 0x45, 0xd8, 0xaa, 0xd5, 0x7d, 0x95, 0x49, 0xed, 0x39, 0x08, 0xf9,
	0x14, 0xaa, 0xfd, 0x71, 0xe8, 0x4a, 0x74, 0x03, 0xd1, 0x55, 0xab, 0x8d, 0xdf, 0x76, 0x2a, 0x27,
	0x9f, 0x43, 0x63, 0x10, 0x85, 0x21, 0x1b, 0x08, 0x5c, 0x57, 0x0d, 0x61, 0x0d, 0x6b, 0x6f, 0x26,
	0xb3, 0xf3, 0x7a, 0x32, 0x84, 0x46, 0x10, 0x0d, 0x68, 0x10, 0x4c, 0x9f, 0x71, 0xc6, 0x5a, 0xf5,
	0x2d, 0x63, 0xbb, 0xd9, 0x7e, 0x76, 0xf1, 0x64, 0x0f, 0x76, 0x07, 0x51, 0x14, 0x5b, 0x7c, 0x30,
	0xa4, 0x7e, 0x68, 0x8d, 0x22, 0x97, 0x05, 0x89, 0xb5, 0x1b, 0x9c, 0xd3, 0x69, 0xd2, 0x39, 0x1b,
	0xd3, 0xe0, 0x67, 0x18, 0x70, 0x6b, 0x10, 0x05, 0x81, 0xe4, 0x8a, 0x42, 0xcb, 0x1f, 0x8d, 0xc6,
	0x42, 0xfa, 0x69, 0xb5, 0x7d, 0x71, 0xcc, 0xc4, 0xcf, 0xed, 0x3c, 0x35, 0xf9, 0x3e, 0xac, 0x67,
	0x86, 0x9d, 0x71, 0xc2, 0xdc, 0x16, 0x6c, 0x19, 0xdb, 0x35, 0x7b, 0x2d, 0x13, 0xbf, 0x4a, 0x98,
	0x6b, 0xbe, 0x01, 0xf2, 0x92, 0x7a, 0x1e, 0x73, 0xf7, 0xa2, 0x50, 0xf8, 0xe1, 0x98, 0x4a, 0x76,
	0xf2, 0x10, 0x6a, 0x31, 0xe5, 0x4e, 0x3f, 0x72, 0xa7, 0x2d, 0x63, 0xcb, 0xd8, 0x6e, 0xec, 0xac,
	0x59, 0x47, 0x94, 0x7f, 0xe3, 0x8b, 0xa1, 0x4d, 0x43, 0x37, 0x1a, 0xed, 0xaf, 0xd8, 0xd5, 0x98,
	0xf2, 0x76, 0xe4, 0x4e, 0xc9, 0x7d, 0x58, 0x43, 0xf7, 0x10, 0xee, 0x70, 0x76, 0xda, 0x2a, 0x6c,
	0x19, 0xdb, 0xc5, 0xfd, 0x15, 0xbb, 0x89, 0x72, 0x09, 0xb2, 0xd9, 0x69, 0x7b, 0x15, 0x1a, 0x02,
	0x4d, 0x39, 0x83, 0x28, 0x14, 0xe6, 0xaf, 0x0c, 0x58, 0x9d, 0xe3, 0x24, 0x5b, 0x50, 0xca, 0x59,
	0x2c, 0x49, 0x8b, 0xed, 0xca, 0xc5, 0x93, 0xe2, 0xbf, 0x0c, 0xc3, 0x46, 0x0d, 0x79, 0x01, 0x0d,
	0x8e, 0xd8, 0x63, 0x41, 0x05, 0x43, 0x3b, 0xcd, 0xf6, 0xe7, 0x17, 0x4f, 0x1e, 0xc0, 0x76, 0x3e,
	0x80, 0x03, 0x3e, 0x8d, 0x45, 0x64, 0x0d, 0x69, 0x32, 0xb4, 0xda, 0x01, 0x7d, 0xcd, 0x76, 0xfa,
	0x8f, 0x1f, 0xed, 0x28, 0x2b, 0x76, 0x9e, 0xc1, 0xbc, 0x0d, 0xe5, 0xa3, 0xbd, 0x28, 0x11, 0x84,
	0x40, 0x69, 0x10, 0x25, 0x02, 0x6d, 0x97, 0x6c, 0x1c, 0x9b, 0xbf, 0x84, 0x1b, 0x07, 0x7e, 0x22,
	0xe6, 0x9d, 0x6c, 0x41, 0x29, 0xa6, 0x3c, 0xcd, 0x71, 0x74, 0xd2, 0x46, 0xc9, 0xb7, 0xef, 0xdc,
	0xef, 0x0c, 0x28, 0x9e, 0x50, 0x4e, 0xee, 0x42, 0xbd, 0x1f, 0x8d, 0x43, 0xd7, 0x99, 0x50, 0x8e,
	0x0e, 0xde, 0xd8, 0x5f, 0xb1, 0x6b, 0x28, 0x3a, 0xc1, 0x63, 0x57, 0x3b, 0xe5, 0x8c, 0xa1, 0xb6,
	0xa0, 0xb5, 0x55, 0x29, 0x91, 0x4a, 0x0b, 0x6a, 0xe7, 0x7e, 0xe0, 0x0e, 0x28, 0x77, 0x5b, 0x45,
	0x8c, 0xeb, 0x86, 0x75, 0x42, 0xb9, 0xf5, 0x8d, 0x16, 0xf6, 0x12, 0x4f, 0x92, 0xa5, 0x98, 0xcd,
	0x55, 0x68, 0xe4, 0x54, 0xed, 0x35, 0x68, 0x4e, 0x28, 0x77, 0xfc, 0x30, 0x11, 0x34, 0x1c, 0x30,
	0xd3, 0x85, 0x8a, 0x3a, 0x03, 0xd7, 0xd8, 0xac, 0x3b, 0x50, 0x3f, 0xe7, 0xbe, 0x60, 0xcf, 0x02,
	0xea, 0xa1, 0x63, 0x35, 0x3b, 0x13, 0x90, 0x4d, 0x79, 0x1f, 0x50, 0x17, 0x95, 0x45, 0x54, 0xce,
	0xbe, 0xcd, 0x7f, 0x1b, 0x50, 0x92, 0x77, 0x87, 0x34, 0x32, 0x18, 0xd2, 0x70, 0xb1, 0x11, 0xa9,
	0x91, 0xdb, 0xe1, 0x52, 0x41, 0xf5, 0x95, 0xa2, 0xb7, 0x43, 0x4a, 0xc8, 0x3d, 0x80, 0x98, 0xf1,
	0xc4, 0x4f, 0x04, 0x0b, 0x85, 0x36, 0x91, 0x93, 0x5c, 0x3e, 0x8c, 0xe5, 0xf7, 0x7a, 0x18, 0x2b,
	0x0b, 0x0f, 0xe3, 0x1f, 0x0c, 0x68, 0xe8, 0x3b, 0xb1, 0xed, 0xe3, 0xf2, 0x6b, 0x31, 0x15, 0x82,
	0xf1, 0x70, 0x3e, 0xdf, 0x66, 0x52, 0xf2, 0x19, 0x54, 0x92, 0x68, 0xcc, 0x07, 0x2a, 0xdd, 0x2e,
	0x87, 0x48, 0xeb, 0x88, 0x09, 0x75, 0xce, 0x46, 0xd4, 0x0f, 0x5d, 0xc6, 0x75, 0x16, 0x94, 0x64,
	0x16, 0xd8, 0x99, 0x58, 0xee, 0x96, 0xcc, 0x99, 0xbd, 0x68, 0x1c, 0x8a, 0x56, 0x69, 0xcb, 0xd8,
	0x2e, 0xdb, 0x99, 0xc0, 0x3c, 0x83, 0x86, 0xf4, 0xe8, 0x48, 0xd9, 0xbd, 0x86, 0x63, 0x73, 0x26,
	0x0b, 0xd7, 0x30, 0x59, 0xbc, 0x6c, 0xf2, 0x27, 0xb0, 0x21, 0x4f, 0x5f, 0xce, 0x6c, 0x42, 0xb6,
	0xdf, 0xb2, 0xdb, 0xb4, 0x72, 0x80, 0xcc, 0xbe, 0xf9, 0xa7, 0x02, 0x54, 0x75, 0x28, 0x89, 0x09,
	0xe5, 0xbe, 0x9f, 0xbd, 0x4b, 0x4d, 0x2b, 0x17, 0x63, 0x5b, 0xa9, 0x66, 0xe9, 0x5c, 0x78, 0x67,
	0x3a, 0xff, 0xb7, 0x7c, 0x22, 0x50, 0x8a, 0x19, 0x7b, 0x8d, 0xb1, 0xab, 0xd9, 0x38, 0x96, 0x2b,
	0x94, 0xf4, 0x6a, 0x85, 0x65, 0xb5, 0xc2, 0x99, 0xe0, 0x72, 0x06, 0x56, 0xde, 0x6b, 0x06, 0x56,
	0x17, 0x66, 0xe0, 0x9f, 0x0b, 0x50, 0x3c, 0x64, 0xe7, 0xf3, 0x8e, 0xe3, 0x95, 0x93, 0x77, 0x7c,
	0x13, 0x8c, 0x78, 0x61, 0xa4, 0x8c, 0x98, 0x6c, 0x40, 0x71, 0xcc, 0xfd, 0x56, 0x71, 0xab, 0xb8,
	0x5d, 0xb7, 0xe5, 0x90, 0x7c, 0x09, 0xe0, 0x87, 0xbf, 0x50, 0x8e, 0xa6, 0x2f, 0xfb, 0x4d, 0xf9,
	0xb2, 0x5b, 0xcf, 0x67, 0xe2, 0x4e, 0x28, 0xf8, 0xd4, 0xce, 0xe1, 0xde, 0xdf, 0xf1, 0xdc, 0xdc,
	0x83, 0xf5, 0x4b, 0x8e, 0xc8, 0x45, 0xbc, 0x66, 0xea, 0x6e, 0xab, 0xdb, 0x72, 0x48, 0x36, 0xa1,
	0x3c, 0xa1, 0xc1, 0x78, 0xee, 0x9c, 0xd9, 0x4a, 0xf4, 0xa3, 0xc2, 0x57, 0x86, 0x79, 0x0e, 0x75,
	0xac, 0x38, 0xf6, 0x68, 0xc2, 0xc8, 0x7d, 0xa8, 0xea, 0x44, 0x5c, 0x78, 0x73, 0xa5, 0xca, 0x6b,
	0x9e, 0xde, 0xab, 0x8f, 0xc9, 0x85, 0x01, 0x65, 0xb4, 0x2c, 0xd9, 0x04, 0xe5, 0x1e, 0x13, 0x0b,
	0x8d, 0x6a, 0x1d, 0xd9, 0x82, 0xf2, 0x80, 0x26, 0xb3, 0x22, 0x0c, 0xac, 0x99, 0xdb, 0xb6, 0x52,
	0x5c, 0x8e, 0x7c, 0xe9, 0xbd, 0xa6, 0x65, 0x79, 0x61, 0x5a, 0xfe, 0x1e, 0xa0, 0x24, 0xeb, 0x3d,
	0xf2, 0x11, 0x54, 0x3c, 0xa7, 0x1f, 0x45, 0x01, 0xae, 0xb1, 0xb6, 0xbf, 0x62, 0x97, 0xbd, 0x76,
	0x14, 0x05, 0xe4, 0x16, 0x94, 0x3d, 0xc7, 0x0f, 0x05, 0x46, 0x92, 0xec, 0xaf, 0xd8, 0x25, 0xef,
	0x79, 0x28, 0xe4, 0xdb, 0xe8, 0x39, 0x89, 0xe0, 0x7e, 0xa8, 0x5e, 0x99, 0xba, 0x7c, 0x1b, 0xbd,
	0x63, 0x14, 0xa8, 0x39, 0x32, 0x59, 0x4b, 0x5a, 0x53, 0xf2, 0x5e, 0x71, 0x9f, 0x98, 0xd0, 0xf4,
	0x9c, 0xfe, 0x54, 0x30, 0x87, 0x72, 0x4e, 0xa7, 0xad, 0x8f, 0x65, 0x00, 0xf6, 0x57, 0x6c, 0xf0,
	0xda, 0x53, 0xc1, 0x76, 0xa5, 0x8c, 0x7c, 0x0f, 0x80, 0x39, 0x61, 0x24, 0x54, 0x89, 0x54, 0xc6,
	0x78, 0x97, 0xad, 0xce, 0x61, 0x24, 0xe4, 0x6b, 0xca, 0x0e, 0x23, 0x81, 0xa5, 0x91, 0x82, 0x31,
	0x4f, 0xc1, 0x2a, 0x33, 0x18, 0xf3, 0x14, 0x8c, 0x79, 0x08, 0xdb, 0x86, 0x06, 0x73, 0x46, 0xe3,
	0x40, 0xd3, 0x55, 0x11, 0x57, 0xb1, 0x3a, 0xbd, 0x71, 0x20, 0xf9, 0xea, 0x4c, 0x0e, 0x32, 0x42,
	0xd7, 0x9f, 0x28, 0x60, 0x2d, 0x25, 0x7c, 0xea, 0x4f, 0x90, 0xf0, 0xa9, 0x3f, 0xc9, 0x08, 0xe3,
	0x60, 0x9c, 0x28, 0x5c, 0x3d, 0x25, 0x3c, 0x0a, 0xc6, 0x09, 0x12, 0xca, 0x01, 0x22, 0x1f, 0x42,
	0x93, 0x39, 0x23, 0x3f, 0x4c, 0xa1, 0x80, 0xd0, 0xaa, 0xd5, 0xe9, 0x49, 0x99, 0x5c, 0x35, 0xc3,
	0x11, 0x82, 0x4d, 0xa8, 0x33, 0x27, 0xf5, 0xb2, 0xa1, 0x93, 0xac, 0x73, 0x20, 0x7d, 0xac, 0xb2,
	0x83, 0x9c, 0x87, 0x81, 0x60, 0x0a, 0xd4, 0x4c, 0x3d, 0x3c, 0x10, 0x0c, 0x3d, 0x3c, 0x10, 0x2c,
	0xa3, 0xf2, 0x34, 0xd5, 0x6a, 0x4a, 0xd5, 0x55, 0x54, 0xdd, 0x1c, 0x95, 0x97, 0x52, 0xad, 0xa5,
	0x54, 0x5d, 0x4d, 0xd5, 0xcd, 0x53, 0xb1, 0x33, 0x85, 0x5a, 0x4f, 0xa9, 0x3a, 0x67, 0x48, 0xd5,
	0x39, 0xcb, 0x6f, 0x84, 0x06, 0x6d, 0x64, 0x1b, 0x71, 0xa6, 0x37, 0x22, 0x07, 0xa3, 0xa1, 0xab,
	0x60, 0x37, 0x52, 0xd8, 0x6e, 0xe8, 0x22, 0x6c, 0x37, 0x74, 0x33, 0x8b, 0x91, 0xae, 0x8f, 0x49,
	0x6a, 0xf1, 0x05, 0x47, 0x8b, 0x2f, 0x78, 0x46, 0x35, 0x49, 0x8b, 0xe8, 0x0f, 0x52, 0xaa, 0x13,
	0xca, 0x91, 0xea, 0x44, 0x17, 0xcf, 0xb8, 0x53, 0x81, 0x9f, 0xe8, 0x48, 0xdc, 0x4c, 0x77, 0x4a,
	0x3e, 0x7d, 0xb8, 0x53, 0xf8, 0x06, 0xce, 0x76, 0x4a, 0x8c, 0xe3, 0x40, 0xc7, 0xe3, 0x56, 0xba,
	0x53, 0x2f, 0xa5, 0x0c, 0x77, 0x0a, 0x47, 0x08, 0xee, 0x48, 0xeb, 0x09, 0xd3, 0xac, 0x1f, 0xa6,
	0xd6, 0x8f, 0x99, 0x68, 0xdf, 0xbb, 0x78, 0x72, 0x1b, 0x3e, 0x5e, 0x70, 0x92, 0x8f, 0x28, 0x3f,
	0x66, 0x2a, 0x7f, 0x25, 0x6e, 0x46, 0x33, 0xa2, 0xb1, 0xa2, 0xf9, 0x28, 0xa5, 0xe9, 0xd1, 0xf8,
	0x4a, 0x9a, 0x1e, 0x8d, 0x91, 0x46, 0xe2, 0x24, 0x8d, 0x05, 0xab, 0xcc, 0x19, 0x31, 0x31, 0x8c,
	0x74, 0x64, 0x5b, 0xc8, 0x54, 0xb3, 0x3a, 0x3d, 0x14, 0xee, 0xaf, 0xd8, 0x0d, 0xa6, 0x86, 0x88,
	0x7f, 0x04, 0x6b, 0xd2, 0x2c, 0x76, 0x6e, 0x6a, 0xc2, 0x6d, 0x9c, 0x50, 0x97, 0xa6, 0x51, 0x2a,
	0x9b, 0x0b, 0xa6, 0xc7, 0x38, 0xa5, 0x0b, 0x1f, 0x32, 0x27, 0x66, 0x7c, 0xc0, 0x42, 0x31, 0xfb,
	0x8b, 0x53, 0xef, 0xe8, 0xaa, 0xb7, 0x73, 0xa4, 0xa4, 0xfa, 0xcf, 0xfe, 0x8a, 0xfd, 0x01, 0x9b,
	0x17, 0x21, 0xd1, 0x63, 0xd8, 0xd0, 0x47, 0x27, 0x3b, 0x3f, 0x77, 0x91, 0x02, 0xd4, 0xf9, 0xd1,
	0x67, 0x68, 0x95, 0xa5, 0x1f, 0x38, 0xed, 0xc7, 0x40, 0xd2, 0x73, 0x94, 0x3b, 0x4d, 0xf7, 0x70,
	0x62, 0x53, 0x9f, 0xa6, 0xf4, 0x48, 0xad, 0xb3, 0xec, 0x33, 0xcb, 0x95, 0x51, 0x1a, 0x9c, 0x4f,
	0x66, 0x61, 0x8e, 0x54, 0xda, 0xf5, 0x54, 0x58, 0xda, 0xeb, 0xb0, 0x2a, 0xdb, 0xdd, 0xac, 0x1a,
	0xff, 0x87, 0x01, 0x65, 0xcc, 0x14, 0x72, 0x13, 0x0a, 0xf1, 0x7c, 0x29, 0x56, 0x88, 0xdf, 0xba,
	0xc9, 0x8b, 0xef, 0xf5, 0x26, 0x2f, 0x2d, 0xba, 0xc9, 0xe7, 0xeb, 0xc2, 0xf2, 0xc2, 0xba, 0xd0,
	0xfc, 0xa3, 0x01, 0x15, 0x95, 0xd5, 0xdf, 0x99, 0x75, 0x99, 0x7f, 0x37, 0xa0, 0x24, 0x8f, 0xd7,
	0xff, 0xd7, 0x4e, 0xfc, 0x53, 0xae, 0xaa, 0x47, 0x63, 0xf2, 0x09, 0x14, 0x5f, 0x4f, 0xd2, 0x65,
	0xad, 0x5a, 0x5f, 0xb3, 0xe9, 0x89, 0x2c, 0x7d, 0x8e, 0xa8, 0xcf, 0x6d, 0xa9, 0xf9, 0xae, 0x2e,
	0xf0, 0xd7, 0x05, 0xa8, 0xea, 0x4b, 0x48, 0x16, 0xf8, 0xea, 0x8e, 0x3a, 0xa4, 0x23, 0xa6, 0x6b,
	0xbf, 0x9c, 0x24, 0x57, 0x5f, 0x15, 0xae, 0xa8, 0xaf, 0x4c, 0xa8, 0x53, 0xee, 0x8d, 0x47, 0x2c,
	0x14, 0x09, 0x56, 0xc1, 0x69, 0x1a, 0x64, 0xe2, 0xff, 0xc5, 0xd6, 0xd3, 0x86, 0x66, 0x7e, 0x53,
	0xc9, 0xbd, 0xac, 0x02, 0xbe, 0xbc, 0x52, 0xac, 0x87, 0xcd, 0x05, 0xf5, 0xf0, 0x0c, 0xa1, 0x54,
	0xa6, 0x09, 0x25, 0xf9, 0xde, 0xc9, 0x76, 0x61, 0x32, 0x63, 0x3a, 0xc9, 0xb7, 0x0b, 0x13, 0xc4,
	0x1c, 0x46, 0xba, 0xa5, 0x30, 0x16, 0xb6, 0x14, 0x0a, 0xc3, 0xbc, 0x2b, 0x31, 0x7b, 0x50, 0xc6,
	0x72, 0x89, 0xdc, 0x81, 0x42, 0xfc, 0x68, 0x21, 0xaa, 0x10, 0x3f, 0x42, 0xed, 0xce, 0x42, 0x9f,
	0x0b, 0xf1, 0x8e, 0xd9, 0x86, 0x92, 0x2c, 0xa5, 0x96, 0xe6, 0xe8, 0x45, 0xee, 0x52, 0x1c, 0x72,
	0x31, 0xf2, 0x65, 0x59, 0x8a, 0xe4, 0x29, 0x54, 0xd4, 0xb3, 0xb3, 0x14, 0xcb, 0x2e, 0x14, 0x3b,
	0x07, 0xcb, 0x47, 0xf5, 0x40, 0xb0, 0xa5, 0xdd, 0xe8, 0x2e, 0xef, 0x46, 0xf7, 0x5b, 0x70, 0xa3,
	0x73, 0xb6, 0xb4, 0x1b, 0x87, 0x6c, 0x79, 0x8e, 0xdd, 0xd0, 0x5d, 0x7a, 0x29, 0x2f, 0xf8, 0x52,
	0x14, 0x3f, 0x85, 0x5a, 0x5a, 0x8f, 0x5d, 0xb3, 0xf9, 0xcc, 0x35, 0xc6, 0x85, 0x2b, 0x1a, 0x63,
	0xb3, 0x07, 0xeb, 0x97, 0xca, 0xb5, 0xa5, 0x1c, 0xed, 0x42, 0x7d, 0x56, 0xba, 0x2d, 0x45, 0xf4,
	0x1c, 0x1a, 0xb9, 0x52, 0x6e, 0x29, 0xaa, 0xdf, 0x16, 0x01, 0xb2, 0xdf, 0x09, 0xc8, 0x63, 0x58,
	0x95, 0x37, 0x72, 0xd6, 0x7c, 0x28, 0xd6, 0xf5, 0xdc, 0x6f, 0x09, 0xb2, 0x06, 0x94, 0x95, 0xb2,
	0xc4, 0xa5, 0x9d, 0xc8, 0x17, 0xd0, 0xc4, 0x69, 0x69, 0x33, 0x52, 0x78, 0xd7, 0x2c, 0x90, 0x30,
	0xdd, 0x9a, 0x3c, 0xd0, 0xb6, 0x66, 0xfd, 0x6b, 0x31, 0xf3, 0x31, 0x35, 0x90, 0x76, 0xb0, 0x0f,
	0xd5, 0x3f, 0x80, 0x39, 0x3b, 0x55, 0xd0, 0x92, 0xee, 0x3a, 0xe4, 0x3b, 0xca, 0x4e, 0x25, 0xf1,
	0x04, 0x47, 0x08, 0xbe, 0x0b, 0x75, 0x24, 0xc6, 0x06, 0xbd, 0xac, 0x1b, 0xf4, 0x9a, 0x14, 0x61,
	0x8f, 0x7e, 0x1b, 0x70, 0x8c, 0x6d, 0x7a, 0x45, 0x6b, 0xab, 0x52, 0x22, 0x3b, 0xf5, 0x4f, 0xd5,
	0x4f, 0x29, 0x69, 0xb3, 0x5e, 0xd5, 0x7a, 0xf4, 0x5b, 0xf7, 0xeb, 0xe9, 0x7c, 0xd9, 0xb2, 0xd7,
	0xf2, 0xf3, 0x65, 0xd7, 0xbe, 0xad, 0x5e, 0xba, 0x7c, 0xe3, 0x5e, 0xd7, 0x18, 0x5c, 0xed, 0xac,
	0x77, 0x6f, 0xdf, 0x82, 0x0f, 0x72, 0x6f, 0xe2, 0xac, 0x98, 0xfe, 0x12, 0x2a, 0x6a, 0x51, 0xe4,
	0x26, 0x94, 0x65, 0x75, 0xf0, 0x46, 0xff, 0xe3, 0x4b, 0x7d, 0x48, 0xa9, 0xcb, 0x62, 0x31, 0x54,
	0xff, 0x63, 0xb7, 0xd5, 0x87, 0x79, 0x1f, 0xd6, 0xe6, 0x63, 0xbd, 0xb8, 0x00, 0x34, 0xef, 0x40,
	0xed, 0x29, 0x8b, 0x83, 0x68, 0xfa, 0xdc, 0x25, 0x1b, 0x50, 0x4c, 0x7c, 0x0f, 0xd9, 0x9b, 0xb6,
	0x1c, 0x9a, 0x0f, 0x00, 0x94, 0x96, 0xf1, 0xe7, 0xf2, 0x58, 0xd7, 0xe3, 0x71, 0x3f, 0xf0, 0x07,
	0x5f, 0xeb, 0x17, 0xb8, 0x69, 0x67, 0x02, 0xf3, 0x37, 0x05, 0x68, 0xe6, 0x7f, 0xb5, 0x92, 0xdd,
	0x92, 0xe7, 0xc4, 0xdc, 0x9f, 0xd0, 0xb4, 0x55, 0x36, 0x74, 0xb7, 0xd4, 0x3d, 0x52, 0x52, 0xd9,
	0x2d, 0x79, 0x7a, 0x9c, 0x36, 0x39, 0x9e, 0xe3, 0xa2, 0x45, 0xc7, 0x77, 0xf3, 0xa9, 0x03, 0x56,
	0x37, 0xf5, 0x53, 0x46, 0xce, 0x4b, 0x3f, 0xd2, 0x26, 0x27, 0x9d, 0xc6, 0xf8, 0x6c, 0x62, 0x51,
	0x37, 0x39, 0xdd, 0x6c, 0x09, 0xb2, 0xc9, 0xf1, 0xb2, 0x4f, 0x9c, 0xdc, 0x86, 0x5b, 0x9e, 0x93,
	0x4c, 0x13, 0x87, 0x8e, 0xc5, 0xd0, 0x11, 0xd1, 0x6b, 0x16, 0xe6, 0x53, 0x6a, 0xcd, 0xea, 0x1e,
	0x4f, 0x93, 0xdd, 0xb1, 0x18, 0xbe, 0x94, 0xaa, 0xfd, 0x15, 0xfb, 0x86, 0x97, 0x17, 0x60, 0x07,
	0xb4, 0x86, 0xbf, 0xe2, 0x65, 0x7b, 0xb6, 0x09, 0xb5, 0x74, 0x8d, 0x64, 0x0d, 0x0a, 0xbe, 0xab,
	0xc3, 0x55, 0xf0, 0x5d, 0xf3, 0x2e, 0xd4, 0xbb, 0x57, 0x84, 0xfc, 0x21, 0x34, 0xba, 0xd7, 0x8e,
	0xf9, 0x3a, 0xac, 0xce, 0x79, 0xd7, 0xfe, 0x9b, 0x71, 0xf1, 0xe4, 0xaf, 0x06, 0x90, 0xb7, 0xcb,
	0xb5, 0xcd, 0x1f, 0x2e, 0x28, 0xe1, 0x54, 0x6d, 0x26, 0x53, 0x30, 0xe9, 0xd1, 0x38, 0x66, 0xdc,
	0xea, 0x5f, 0x96, 0x6c, 0x7e, 0xf5, 0xce, 0x96, 0xfc, 0xe5, 0x34, 0x66, 0x7a, 0x5a, 0x8c, 0x82,
	0xce, 0x9c, 0xf0, 0x5d, 0x33, 0x7b, 0x34, 0x9e, 0x9f, 0xd9, 0xa3, 0x71, 0x67, 0x4e, 0xb8, 0xbf,
	0xd2, 0xaf, 0xe0, 0x4f, 0xb8, 0x5f, 0xfc, 0x27, 0x00, 0x00, 0xff, 0xff, 0xdd, 0xa1, 0x84, 0x49,
	0xeb, 0x1d, 0x00, 0x00,
}
